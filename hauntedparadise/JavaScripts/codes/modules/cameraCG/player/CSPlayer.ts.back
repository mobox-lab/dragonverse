// import { KeyFrame } from "./model/KeyFrame";
// import { Log } from "./utils/Log";
// import { MyQuaternion } from "./utils/MyQuaternion";
// import { CameraCG } from "./CameraCG";

/**
 * 关键帧动画播放器（完整播放，动画无状态，外部使用）
 */

// export class CSPlayer {

//     private static _instance: CSPlayer;
//     public static get instance(): CSPlayer {
//         if (!CSPlayer._instance) {
//             CSPlayer._instance = new CSPlayer();
//         }
//         return CSPlayer._instance;
//     }

//     private _cameraAnchor: CameraAnchor;

//     private _currentAnim: KeyFrame;
//     private _currentPlayIndex: number;
//     private _currentKeyFrameTime: number;
//     private _currentPlayResidueTime: number;
//     private _currentPlayProgress: number;

//     private handleComplete: Function;

//     private _isCompleteReductionCameraSetting = true;

//     private readonly VECTOR_ZERO = mw.Vector.zero;

//     /** 当前帧动画是否播放完成 */
//     private _isPlayComplete = true;

//     private _cameraAnchorMoveLoc: mw.Vector;
//     private _cameraAnchorMoveRot: mw.Rotation = new mw.Rotation;
//     private _cameraAnchorFov: number = 0;
//     // private _cameraAnchorMoveQuat: mw.Quaternion;

//     private _offsetLoc: mw.Vector;
//     private _offsetRot: mw.Rotation;
//     /** 应用到摄像机时的偏移量 */
//     private _offsetMQua: MyQuaternion = new MyQuaternion();


//     init(cameraAnchor: CameraAnchor) {
//         this._cameraAnchor = cameraAnchor;
//     }

// /**
//  * 带偏移值的完整播放动画
//  * @param offsetLoc
//  * @param offsetRot
//  * @param anim
//  * @param isReductionCamera
//  * @param handleComplete
//  */
// playOnOffset(offsetLoc: mw.Vector, offsetRot: mw.Rotation, anim: KeyFrame, isReductionCamera: boolean, handleComplete?: () => void) {
//     // 无旋转偏移时的Loc
//     this._offsetLoc = offsetLoc.clone();
//     this._offsetRot = offsetRot.clone();
//     this._offsetMQua.setEulerAngles(new mw.Vector(this._offsetRot.x, this._offsetRot.y, this._offsetRot.z));
//     this.play(anim, isReductionCamera, handleComplete);
// }

//     /**
//      * 完整播放动画
//      * @param anim
//      * @param isReductionCamera
//      * @param handleComplete
//      */
//     play(anim: KeyFrame, isReductionCamera: boolean, handleComplete?: () => void) {
//         if (anim.getLength() <= 1) {
//             Log.err("动画关键帧缺失");
//             return;
//         }
//         this._isCompleteReductionCameraSetting = isReductionCamera;
//         // 当前未处于自由视角则进行切换
//         if (!CameraCG.instance.isFreeCamera) {
//             CameraCG.instance.enterFreeCamera();
//         }
//         this.handleComplete = handleComplete;
//         this._currentAnim = anim;
//         this._currentPlayIndex = 1;
//         // 将描点移动到初始帧位置
//         this._cameraAnchor.setLocation(this._currentAnim.get(0).location);
//         this._cameraAnchorMoveLoc = this._cameraAnchor.getLocation();
//         this._currentKeyFrameTime = this._currentAnim.getFrameTime(this._currentPlayIndex);
//         this._currentPlayResidueTime = this._currentKeyFrameTime;
//         this._isPlayComplete = false;
//     }

//     stop() {
//         this._isPlayComplete = true;
//         this._offsetLoc = null;
//         this._offsetRot = null;
//         if (this._isCompleteReductionCameraSetting) {
//             // this._cameraAnchor.resetOverrideRotation();
//             CameraCG.instance.exitFreeCamera();
//         }
//     }

//     private setNextFrameInfo() {
//         this._currentPlayIndex += 1;
//         this._currentKeyFrameTime = this._currentAnim.getFrameTime(this._currentPlayIndex);
//         this._currentPlayResidueTime = this._currentKeyFrameTime;
//     }

//     private hasNextFrameInfo(): boolean {
//         return this._currentPlayIndex + 1 < this._currentAnim.getLength();
//     }

//     update(dt: number) {
//         if (this._isPlayComplete) {
//             return;
//         }
//         if (this._currentPlayResidueTime > 0) {
//             this._currentPlayResidueTime -= dt;
//             // 计算当前关键帧播放比（0 ~ 1）
//             this._currentPlayProgress = 1 - this._currentPlayResidueTime / this._currentKeyFrameTime;
//             // 位置运动插值
//             mw.Vector.lerp(
//                 this._currentAnim.get(this._currentPlayIndex - 1).location,
//                 this._currentAnim.get(this._currentPlayIndex).location,
//                 this._currentPlayProgress,
//                 this._cameraAnchorMoveLoc
//             )
//             // 通过旋转偏移解算正确位置
//             if (this._offsetRot) {
//                 let dir: mw.Vector = mw.Vector.subtract(this._cameraAnchorMoveLoc, this.VECTOR_ZERO);
//                 MyQuaternion.multiplyVector(dir, this._offsetMQua, this._cameraAnchorMoveLoc);
//             }
//             // 位置偏移
//             if (this._offsetLoc) {
//                 this._cameraAnchorMoveLoc.add(this._offsetLoc);
//             }
//             this._cameraAnchor.setLocation(this._cameraAnchorMoveLoc);
//             // 旋转运动插值
//             this._cameraAnchorMoveRot.y = MathUtil.lerp(
//                 this._currentAnim.get(this._currentPlayIndex - 1).rotation.y,
//                 this._currentAnim.get(this._currentPlayIndex).rotation.y,
//                 this._currentPlayProgress
//             )
//             this._cameraAnchorMoveRot.z = MathUtil.lerp(
//                 this._currentAnim.get(this._currentPlayIndex - 1).rotation.z,
//                 this._currentAnim.get(this._currentPlayIndex).rotation.z,
//                 this._currentPlayProgress
//             )
//             // 旋转偏移
//             if (this._offsetRot) {
//                 // 不再对Z以外的轴进行旋转修正（会造成视野倾斜导致恢复摄像机异常）
//                 // this._cameraAnchorMoveRot.addition(this._offsetRot, this._cameraAnchorMoveRot);
//                 this._cameraAnchorMoveRot.z += this._offsetRot.z;
//             }
//             this._cameraAnchor.setRotation(this._cameraAnchorMoveRot);
//             // FOV运动插值
//             this._cameraAnchorFov = MathUtil.lerp(
//                 this._currentAnim.get(this._currentPlayIndex - 1).fov,
//                 this._currentAnim.get(this._currentPlayIndex).fov,
//                 this._currentPlayProgress
//             );
//             this._cameraAnchor.setFOV(this._cameraAnchorFov);

//         } else {
//             if (this.hasNextFrameInfo()) {
//                 this.setNextFrameInfo();
//             } else {
//                 // 整个帧动画播放完成
//                 this._isPlayComplete = true;
//                 this._offsetLoc = null;
//                 this._offsetRot = null;
//                 // Callback
//                 if (this.handleComplete) {
//                     this.handleComplete();
//                     this.handleComplete = null;
//                 }
//                 if (this._isCompleteReductionCameraSetting) {
//                     // this._cameraAnchor.resetOverrideRotation();
//                     CameraCG.instance.exitFreeCamera();
//                 }
//             }
//         }
//     }

// }