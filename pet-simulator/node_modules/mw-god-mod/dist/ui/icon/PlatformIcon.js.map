{"version":3,"file":"PlatformIcon.js","sources":["../../../ui/icon/PlatformIcon.ts"],"sourcesContent":["import { Component, ComponentOption, extractLayoutFromOption, overrideOption } from \"mw-lynx-ui\";\r\nimport Gtk from \"gtoolkit\";\r\n\r\n/**\r\n * Icon for Platform.\r\n *\r\n * ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠐⠒⠒⠒⠒⠚⠛⣿⡟\r\n * ⠄⠄⢠⠄⠄⠄⡄⠄⠄⣠⡶⠶⣶⠶⠶⠂⣠⣶⣶⠂⠄⣸⡿⠄\r\n * ⠄⢀⣿⠇⠄⣰⡿⣠⡾⠋⠄⣼⡟⠄⣠⡾⠋⣾⠏⠄⢰⣿⠁⠄\r\n * ⠄⣾⡏⠄⠠⠿⠿⠋⠠⠶⠶⠿⠶⠾⠋⠄⠽⠟⠄⠄⠄⠃⠄⠄\r\n * ⣼⣿⣤⡤⠤⠤⠤⠤⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\r\n * @author LviatYi\r\n * @font JetBrainsMono Nerd Font Mono https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/JetBrainsMono.zip\r\n * @fallbackFont Sarasa Mono SC https://github.com/be5invis/Sarasa-Gothic/releases/download/v0.41.6/sarasa-gothic-ttf-0.41.6.7z\r\n */\r\nexport class PlatformIcon extends Component {\r\n//#region Constant\r\n    public static readonly ImgCircle = \"163437\";\r\n\r\n    public static readonly HexServer = \"1ea89d\";\r\n\r\n    public static readonly HexClient = \"e550b2\";\r\n\r\n    public static readonly HexDouble = \"616972\";\r\n//#endregion ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠐⠒⠒⠒⠒⠚⠛⣿⡟⠄⠄⢠⠄⠄⠄⡄⠄⠄⣠⡶⠶⣶⠶⠶⠂⣠⣶⣶⠂⠄⣸⡿⠄⠄⢀⣿⠇⠄⣰⡿⣠⡾⠋⠄⣼⡟⠄⣠⡾⠋⣾⠏⠄⢰⣿⠁⠄⠄⣾⡏⠄⠠⠿⠿⠋⠠⠶⠶⠿⠶⠾⠋⠄⠽⠟⠄⠄⠄⠃⠄⠄⣼⣿⣤⡤⠤⠤⠤⠤⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\r\n\r\n    private _imgFlag: mw.Image;\r\n\r\n    private _txtFlag: mw.TextBlock;\r\n\r\n    private _option: Readonly<Required<PlatformIconOption>> = undefined;\r\n\r\n//#region Lui Component\r\n    public static create(option?: PlatformIconOption): PlatformIcon {\r\n        let icon = new PlatformIcon();\r\n\r\n        icon._option = PlatformIcon.defaultOption(option);\r\n\r\n        icon._imgFlag = mw.Image.newObject(icon.root, \"imgFlag\");\r\n        icon._imgFlag.imageGuid = PlatformIcon.ImgCircle;\r\n\r\n        icon._txtFlag = mw.TextBlock.newObject(icon.root, \"txtFlag\");\r\n        icon._txtFlag.glyph = mw.UIFontGlyph.Bold;\r\n        icon._txtFlag.fontSize = icon._option.fontSize;\r\n        icon._txtFlag.textAlign = mw.TextJustify.Center;\r\n        icon._txtFlag.textVerticalAlign = mw.TextVerticalJustify.Center;\r\n        icon._txtFlag.setFontColorByHex(\"#FFFFFF\");\r\n\r\n        switch (icon._option.variant) {\r\n            case \"server\":\r\n                icon._imgFlag.setImageColorByHex(this.HexServer);\r\n                icon._txtFlag.text = \"S\";\r\n                break;\r\n            case \"client\":\r\n                icon._imgFlag.setImageColorByHex(this.HexClient);\r\n                icon._txtFlag.text = \"C\";\r\n                break;\r\n            case \"double\":\r\n                icon._imgFlag.setImageColorByHex(this.HexDouble);\r\n                icon._txtFlag.text = \"CS\";\r\n                break;\r\n        }\r\n\r\n        icon.setLayout(icon._option);\r\n\r\n        return icon;\r\n    }\r\n\r\n    public static defaultOption(option?: PlatformIconOption): Required<PlatformIconOption> {\r\n        if (!option) option = {};\r\n\r\n        if (!option.size) option.size = {x: 50, y: 50};\r\n        if (!option.padding) option.padding = {};\r\n        if (!option.fontSize) option.fontSize = 16;\r\n        if (!option.variant) option.variant = \"double\";\r\n\r\n        return option as Required<PlatformIconOption>;\r\n    }\r\n\r\n    public setLayout(option: ComponentOption): this {\r\n        overrideOption(this._option, option);\r\n        super.setLayout(this._option);\r\n        let [\r\n            [x, y],\r\n            [pt, pr, pb, pl],\r\n            [contentX, contentY],\r\n        ] = extractLayoutFromOption(this._option);\r\n\r\n        Gtk.setUiSize(this._imgFlag, contentX, contentY);\r\n        Gtk.setUiPosition(this._imgFlag, pl, pt);\r\n        Gtk.setUiSize(this._txtFlag, contentX, contentY);\r\n        Gtk.setUiPosition(this._txtFlag, pl, pr);\r\n\r\n        return this;\r\n    }\r\n\r\n//#endregion ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠐⠒⠒⠒⠒⠚⠛⣿⡟⠄⠄⢠⠄⠄⠄⡄⠄⠄⣠⡶⠶⣶⠶⠶⠂⣠⣶⣶⠂⠄⣸⡿⠄⠄⢀⣿⠇⠄⣰⡿⣠⡾⠋⠄⣼⡟⠄⣠⡾⠋⣾⠏⠄⢰⣿⠁⠄⠄⣾⡏⠄⠠⠿⠿⠋⠠⠶⠶⠿⠶⠾⠋⠄⠽⠟⠄⠄⠄⠃⠄⠄⣼⣿⣤⡤⠤⠤⠤⠤⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\r\n}\r\n\r\nexport type PlatformIconVariant = \"server\" | \"client\" | \"double\";\r\n\r\nexport interface PlatformIconOption extends ComponentOption {\r\n    fontSize?: number;\r\n\r\n    variant?: PlatformIconVariant;\r\n}"],"names":[],"mappings":"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"}