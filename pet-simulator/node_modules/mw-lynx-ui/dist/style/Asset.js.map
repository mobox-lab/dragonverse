{"version":3,"file":"Asset.js","sources":["../../style/Asset.ts"],"sourcesContent":["import Gtk from \"gtoolkit\";\r\n\r\nexport namespace Lui.Asset {\r\n    export const ImgCircle = \"163437\";\r\n\r\n    export const ImgRectangle = \"114028\";\r\n\r\n    export const ImgRoundedRectangle = \"163428\";\r\n\r\n    export const ImgRoundedRectangleBoxMargin = {left: 12, top: 12, right: 12, bottom: 12};\r\n\r\n    export const ImgHalfRoundRectangle = \"163390\";\r\n\r\n    export const ImgHalfRoundedRectangleBoxMargin = {left: 12, top: 12, right: 12, bottom: 0};\r\n\r\n    export const ImgRoundedRectangleOutline = \"163430\";\r\n\r\n    export const ImgCross = \"95810\";\r\n\r\n    export enum Interval {\r\n        VeryFast = 0.1,\r\n        Fast = 0.25,\r\n        Normal = 0.5,\r\n        Slow = 1,\r\n    }\r\n\r\n    export enum Color {\r\n        White = \"#FFFFFF\",\r\n        Black = \"#000000\",\r\n        Gray50 = \"#fafafa\",\r\n        Gray100 = \"#f5f5f5\",\r\n        Gray200 = \"#eeeeee\",\r\n        Gray300 = \"#e0e0e0\",\r\n        Gray400 = \"#bdbdbd\",\r\n        Gray500 = \"#9e9e9e\",\r\n        Gray600 = \"#757575\",\r\n        Gray700 = \"#616161\",\r\n        Gray800 = \"#424242\",\r\n        Gray900 = \"#212121\",\r\n        Blue200 = \"#90caf9\",\r\n        Blue = \"#2196f3\",\r\n        Blue800 = \"#1565c0\",\r\n        Red200 = \"#ef9a9a\",\r\n        Red = \"#f44336\",\r\n        Red800 = \"#c62828\",\r\n        Green200 = \"#a5d6a7\",\r\n        Green = \"#4caf50\",\r\n        Green800 = \"#2e7d32\",\r\n        Yellow200 = \"#fff59d\",\r\n        Yellow = \"#ffeb3b\",\r\n        Yellow800 = \"#f9a825\",\r\n    }\r\n\r\n    export class ThemeColor {\r\n        /**\r\n         * 主色.\r\n         */\r\n        public primary: string;\r\n\r\n        /**\r\n         * 副色.\r\n         */\r\n        public secondary: string;\r\n    }\r\n\r\n    export const NormalThemeColor: ThemeColor = {\r\n        primary: Color.Gray500,\r\n        secondary: Color.Gray200,\r\n    };\r\n\r\n    export namespace ColorUtil {\r\n        export interface RGB {\r\n            r: number,\r\n            g: number,\r\n            b: number,\r\n            a?: number,\r\n        }\r\n\r\n        export interface HSV {\r\n            h: number,\r\n            s: number,\r\n            v: number\r\n        }\r\n\r\n        const safeCache: RGB & HSV = {\r\n            r: 0,\r\n            g: 0,\r\n            b: 0,\r\n            h: 0,\r\n            s: 0,\r\n            v: 0,\r\n        };\r\n\r\n        const safeCache2: RGB & HSV = {\r\n            r: 0,\r\n            g: 0,\r\n            b: 0,\r\n            h: 0,\r\n            s: 0,\r\n            v: 0,\r\n        };\r\n\r\n        export function colorHexWithAlpha(color: string, alpha: number) {\r\n            if (color.length > 7) return color;\r\n\r\n            return `${color}${\r\n                (Math.ceil(Gtk.clamp(alpha) * 255))\r\n                    .toString(16)\r\n                    .toUpperCase()\r\n            }`;\r\n        }\r\n\r\n        export function lerp(r: number,\r\n                             g: number,\r\n                             b: number,\r\n                             rd: number,\r\n                             gd: number,\r\n                             bd: number,\r\n                             t: number,\r\n                             out?: RGB): RGB {\r\n            if (!out) out = {r, g, b};\r\n            out.r = r + (rd - r) * t;\r\n            out.g = g + (gd - g) * t;\r\n            out.b = b + (bd - b) * t;\r\n\r\n            return out;\r\n        }\r\n\r\n        export function lerpByHsv(r: number,\r\n                                  g: number,\r\n                                  b: number,\r\n                                  rd: number,\r\n                                  gd: number,\r\n                                  bd: number,\r\n                                  t: number,\r\n                                  outer?: RGB): RGB {\r\n            const hsv = rgbToHsv(r, g, b, safeCache);\r\n            const hsvD = rgbToHsv(rd, gd, bd, safeCache2);\r\n\r\n            return hsvToRgb(\r\n                hsv.h + (hsvD.h - hsv.h) * t,\r\n                hsv.s + (hsvD.s - hsv.s) * t,\r\n                hsv.v + (hsvD.v - hsv.v) * t,\r\n                outer,\r\n            );\r\n        }\r\n\r\n        export function lerpHsv(h: number,\r\n                                s: number,\r\n                                v: number,\r\n                                hd: number,\r\n                                sd: number,\r\n                                vd: number,\r\n                                t: number,\r\n                                out?: HSV): HSV {\r\n            if (!out) out = {h, s, v};\r\n            out.h = h + (hd - h) * t;\r\n            out.s = s + (sd - s) * t;\r\n            out.v = v + (vd - v) * t;\r\n\r\n            return out;\r\n        }\r\n\r\n        export function rgbToHsv(r: number, g: number, b: number, out?: HSV): HSV {\r\n            r /= 255;\r\n            g /= 255;\r\n            b /= 255;\r\n\r\n            let max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n            if (!out) out = {h: 0, s: 0, v: max};\r\n\r\n            let d = max - min;\r\n            out.s = max === 0 ? 0 : d / max;\r\n\r\n            if (max === min) {\r\n                out.h = 0;\r\n            } else {\r\n                switch (max) {\r\n                    case r:\r\n                        out.h = (g - b) / d + (g < b ? 6 : 0);\r\n                        break;\r\n                    case g:\r\n                        out.h = (b - r) / d + 2;\r\n                        break;\r\n                    case b:\r\n                        out.h = (r - g) / d + 4;\r\n                        break;\r\n                }\r\n                out.h /= 6;\r\n            }\r\n\r\n            return out;\r\n        }\r\n\r\n        export function hsvToRgb(h: number, s: number, v: number, out?: RGB): RGB {\r\n            if (!out) out = {r: 0, g: 0, b: 0};\r\n            let i = Math.floor(h * 6);\r\n            let f = h * 6 - i;\r\n            let p = v * (1 - s);\r\n            let q = v * (1 - f * s);\r\n            let t = v * (1 - (1 - f) * s);\r\n\r\n            switch (i % 6) {\r\n                case 0:\r\n                    out.r = v;\r\n                    out.g = t;\r\n                    out.b = p;\r\n                    break;\r\n                case 1:\r\n                    out.r = q;\r\n                    out.g = v;\r\n                    out.b = p;\r\n                    break;\r\n                case 2:\r\n                    out.r = p;\r\n                    out.g = v;\r\n                    out.b = t;\r\n                    break;\r\n                case 3:\r\n                    out.r = p;\r\n                    out.g = q;\r\n                    out.b = v;\r\n                    break;\r\n                case 4:\r\n                    out.r = t;\r\n                    out.g = p;\r\n                    out.b = v;\r\n                    break;\r\n                case 5:\r\n                    out.r = v;\r\n                    out.g = p;\r\n                    out.b = q;\r\n                    break;\r\n            }\r\n\r\n            out.r *= 255;\r\n            out.g *= 255;\r\n            out.b *= 255;\r\n\r\n            return out;\r\n        }\r\n\r\n        export function hexToRgb(hex: string, out?: RGB): RGB {\r\n            if (!out) out = {r: 0, g: 0, b: 0};\r\n            hex = hex.replace(/^#/, \"\");\r\n\r\n            let bigint = parseInt(hex, 16);\r\n            out.r = (bigint >> 16) & 255;\r\n            out.g = (bigint >> 8) & 255;\r\n            out.b = bigint & 255;\r\n\r\n            return out;\r\n        }\r\n\r\n        export function rgbToHex(r: number, g: number, b: number): string {\r\n            let red = r.toString(16).padStart(2, \"0\");\r\n            let green = g.toString(16).padStart(2, \"0\");\r\n            let blue = b.toString(16).padStart(2, \"0\");\r\n\r\n            return `#${red}${green}${blue}`;\r\n        }\r\n\r\n        export function hexToHsv(hex: string, out?: HSV): HSV {\r\n            hexToRgb(hex, safeCache);\r\n            return rgbToHsv(safeCache.r, safeCache.g, safeCache.b, out);\r\n        }\r\n\r\n        export function hsvToHex(h: number, s: number, v: number): string {\r\n            let rgb = hsvToRgb(h, s, v);\r\n            return rgbToHex(rgb.r, rgb.g, rgb.b);\r\n        }\r\n\r\n        /**\r\n         * 是否 是鲜艳色.\r\n         * @param {number} r\r\n         * @param {number} g\r\n         * @param {number} b\r\n         * @return {boolean}\r\n         */\r\n        export function isBrightness(r: number, g: number, b: number): boolean {\r\n            return (r * 299 + g * 587 + b * 114) / 1000 > 128;\r\n        }\r\n\r\n        /**\r\n         * 转换为深色主题颜色.\r\n         * @param {ThemeColor} color\r\n         * @return {ThemeColor}\r\n         */\r\n        export function toDarkThemeColor(color: ThemeColor): ThemeColor {\r\n            let primary = hexToHsv(color.primary);\r\n            primary = toBrighter(primary.h, primary.s, primary.v);\r\n            let secondary = hexToHsv(color.secondary);\r\n            secondary = toDarker(secondary.h, secondary.s, secondary.v);\r\n\r\n            return {\r\n                primary: hsvToHex(primary.h, primary.s, primary.v),\r\n                secondary: hsvToHex(secondary.h, secondary.s, secondary.v),\r\n            };\r\n        }\r\n\r\n        /**\r\n         * 降低亮度.\r\n         * @param {number} h\r\n         * @param {number} s\r\n         * @param {number} v\r\n         * @return {{h: number, s: number, v: number}}\r\n         */\r\n        export function toDarker(h: number, s: number, v: number)\r\n            : HSV {\r\n            return {\r\n                h,\r\n                s: Math.min(s * 1.2, 1),\r\n                v: v * 0.8,\r\n            };\r\n        }\r\n\r\n        /**\r\n         * 提高亮度.\r\n         * @param {number} h\r\n         * @param {number} s\r\n         * @param {number} v\r\n         * @return {{h: number, s: number, v: number}}\r\n         */\r\n        export function toBrighter(h: number, s: number, v: number)\r\n            : HSV {\r\n            return {\r\n                h,\r\n                s: s * 0.8,\r\n                v: Math.min(v * 1.2, 1),\r\n            };\r\n        }\r\n    }\r\n}"],"names":[],"mappings":"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"}