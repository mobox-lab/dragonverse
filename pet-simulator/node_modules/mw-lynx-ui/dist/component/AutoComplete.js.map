{"version":3,"file":"AutoComplete.js","sources":["../../component/AutoComplete.ts"],"sourcesContent":["import Gtk, { Delegate, GtkTypes } from \"gtoolkit\";\r\nimport { Property } from \"../style/Property\";\r\nimport { Component, ComponentOption } from \"./Component\";\r\nimport { ClickEvent } from \"../event/ClickEvent\";\r\nimport { InputFieldVariant, TextField } from \"./TextField\";\r\nimport { ChooseItemEvent } from \"../event/ChooseItemEvent\";\r\nimport { Lui } from \"../style/Asset\";\r\nimport Enumerable from \"linq\";\r\nimport Fuse, { FuseOptionKey, FuseSortFunctionArg } from \"fuse.js\";\r\nimport SimpleDelegate = Delegate.SimpleDelegate;\r\nimport ThemeColor = Lui.Asset.ThemeColor;\r\nimport ColorUtil = Lui.Asset.ColorUtil;\r\nimport Color = Lui.Asset.Color;\r\nimport NormalThemeColor = Lui.Asset.NormalThemeColor;\r\n\r\nexport interface AutoCompleteItem {\r\n    label: string,\r\n    group?: string\r\n}\r\n\r\n/**\r\n * AutoComplete.\r\n *\r\n * ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠐⠒⠒⠒⠒⠚⠛⣿⡟\r\n * ⠄⠄⢠⠄⠄⠄⡄⠄⠄⣠⡶⠶⣶⠶⠶⠂⣠⣶⣶⠂⠄⣸⡿⠄\r\n * ⠄⢀⣿⠇⠄⣰⡿⣠⡾⠋⠄⣼⡟⠄⣠⡾⠋⣾⠏⠄⢰⣿⠁⠄\r\n * ⠄⣾⡏⠄⠠⠿⠿⠋⠠⠶⠶⠿⠶⠾⠋⠄⠽⠟⠄⠄⠄⠃⠄⠄\r\n * ⣼⣿⣤⡤⠤⠤⠤⠤⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\r\n * @author LviatYi\r\n * @font JetBrainsMono Nerd Font Mono https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/JetBrainsMono.zip\r\n * @fallbackFont Sarasa Mono SC https://github.com/be5invis/Sarasa-Gothic/releases/download/v0.41.6/sarasa-gothic-ttf-0.41.6.7z\r\n */\r\nexport class AutoComplete<IT extends AutoCompleteItem> extends Component {\r\n    public static readonly originIndex = Symbol(\"index\");\r\n\r\n    private _input: TextField;\r\n\r\n    private _btnClear: mw.Button;\r\n\r\n    private _scrContainer: mw.ScrollBox;\r\n\r\n    private _cnvContainer: mw.Canvas;\r\n\r\n    private _option: Required<AutoCompleteOption<IT>> = undefined;\r\n\r\n    private _contentItems: AutoCompleteContentItem[] = [];\r\n\r\n    private _contentItemsIndexer: Map<IT, number> = new Map();\r\n\r\n    private _fuse: Fuse<IT>;\r\n\r\n    private _standForIndex: number = -1;\r\n\r\n    private _standForIndexInView: number = -1;\r\n\r\n    private _hideScrTimer: number = undefined;\r\n\r\n    private _currentInput: string = undefined;\r\n\r\n    private _currentChoose: IT | undefined = undefined;\r\n\r\n    public get label(): string {\r\n        return this._option.label;\r\n    }\r\n\r\n    public get choose(): IT {\r\n        return this._currentChoose;\r\n    }\r\n\r\n    public set choose(val: IT) {\r\n        if (this._contentItems.some(item => item.label === val.label)) {\r\n            this._input.setContent(val.label);\r\n        }\r\n    }\r\n\r\n//#region Lui Component\r\n    public static create<IT extends AutoCompleteItem>(option?: AutoCompleteOption<IT>): AutoComplete<IT> {\r\n        let autoComplete = new AutoComplete<IT>();\r\n\r\n        autoComplete._option = AutoComplete.defaultOption(option);\r\n\r\n        if (autoComplete._option.zOrder !== undefined)\r\n            autoComplete.root.zOrder = autoComplete._option.zOrder;\r\n\r\n        autoComplete._input = TextField\r\n            .create({\r\n                ...autoComplete._option,\r\n                zOrder: undefined,\r\n            })\r\n            .attach(autoComplete);\r\n\r\n        autoComplete._btnClear = mw.Button.newObject(autoComplete.root, \"btnClear\");\r\n        autoComplete._btnClear.normalImageGuid = Lui.Asset.ImgCross;\r\n        Gtk.setUiSize(autoComplete._btnClear, 20, 20);\r\n        autoComplete._btnClear.transitionEnable = false;\r\n        autoComplete._btnClear.constraints = new mw.UIConstraintAnchors(\r\n            mw.UIConstraintHorizontal.Right,\r\n            mw.UIConstraintVertical.Center);\r\n        autoComplete._btnClear.visibility = mw.SlateVisibility.Collapsed;\r\n        autoComplete._btnClear.setNormalImageColorByHex(ColorUtil.colorHexWithAlpha(Color.Black, 0.5));\r\n\r\n        autoComplete._scrContainer = mw.ScrollBox.newObject(autoComplete.root, \"scrContainer\");\r\n        autoComplete._scrContainer.visibility = mw.SlateVisibility.Visible;\r\n        autoComplete._scrContainer.alwaysShowScrollBar = true;\r\n        autoComplete._scrContainer.scrollbarThickness = 5;\r\n        autoComplete._scrContainer.scrollbarPadding = new mw.Margin(2, 8, 2, 0);\r\n        autoComplete._scrContainer.supportElastic = true;\r\n        autoComplete._scrContainer.animationType = mw.UIScrollBoxAnimationType.ElasticAnimation;\r\n        Gtk.trySetVisibility(autoComplete._scrContainer, false);\r\n\r\n        autoComplete._cnvContainer = mw.Canvas.newObject(autoComplete.root, \"cnvContainer\");\r\n        autoComplete._scrContainer.addChild(autoComplete._cnvContainer);\r\n        autoComplete._cnvContainer.visibility = mw.SlateVisibility.SelfHitTestInvisible;\r\n        autoComplete._cnvContainer.autoSizeVerticalEnable = true;\r\n        autoComplete._cnvContainer.autoLayoutEnable = true;\r\n        autoComplete._cnvContainer.autoLayoutContainerRule = mw.UILayoutType.Vertical;\r\n\r\n        autoComplete.setItems();\r\n        autoComplete.setSize();\r\n        autoComplete.setColor();\r\n\r\n        autoComplete._btnClear.onClicked.add(() => {\r\n            autoComplete._input.setContent(\"\");\r\n            autoComplete._currentChoose = undefined;\r\n            autoComplete.onClear.invoke();\r\n        });\r\n        autoComplete._btnClear.onHovered.add(() => autoComplete._btnClear.setNormalImageColorByHex(\r\n            ColorUtil.colorHexWithAlpha(Color.Black, 1)));\r\n        autoComplete._btnClear.onUnhovered.add(() => autoComplete._btnClear.setNormalImageColorByHex(\r\n            ColorUtil.colorHexWithAlpha(Color.Black, 0.5)));\r\n        autoComplete._input.onFocus.add(() => {\r\n            autoComplete.showScr();\r\n        });\r\n        autoComplete._input.onCommit.add((event) => {\r\n            if (Gtk.isNullOrEmpty(autoComplete._input.text) || autoComplete._standForIndex === -1) {\r\n                autoComplete._currentChoose = undefined;\r\n                autoComplete.onClear.invoke();\r\n            } else {\r\n                autoComplete.chooseByIndex(autoComplete._standForIndex);\r\n            }\r\n            autoComplete.refreshScrHideTimer();\r\n        });\r\n        autoComplete._input.onChange.add((event) => {\r\n            if (autoComplete._currentInput === event.text) return;\r\n            autoComplete._currentInput = event.text;\r\n            if (event.text === \"\") {\r\n                Gtk.trySetVisibility(autoComplete._btnClear, false);\r\n                autoComplete.resetItem();\r\n            } else {\r\n                Gtk.trySetVisibility(autoComplete._btnClear, true);\r\n                autoComplete.filterItems(event.text);\r\n            }\r\n        });\r\n        autoComplete._input.onKeyUp.add((event) => {\r\n            switch (event.key) {\r\n                case mw.Keys.Up:\r\n                    autoComplete.listenToUp();\r\n                    break;\r\n                case mw.Keys.Down:\r\n                    autoComplete.listenToDown();\r\n                    break;\r\n            }\r\n        });\r\n\r\n        return autoComplete;\r\n    };\r\n\r\n    public static defaultOption<T extends AutoCompleteItem>(option?: AutoCompleteOption<T>): Required<AutoCompleteOption<T>> {\r\n        if (!option) option = {};\r\n\r\n        if (!option.label) option.label = \"input\";\r\n        if (!option.size) option.size = {x: 240, y: 60};\r\n        if (!option.padding) option.padding = {};\r\n        if (!option.color) option.color = NormalThemeColor;\r\n        if (!option.itemHeight) option.itemHeight = 40;\r\n        if (!option.maxCount) option.maxCount = 6;\r\n        if (!option.fontSize) option.fontSize = 14;\r\n        if (!option.fontStyle) option.fontStyle = mw.UIFontGlyph.Light;\r\n        if (!option.variant) option.variant = \"filled\";\r\n        if (!option.corner) option.corner = Property.Corner.Bottom;\r\n\r\n        return option as Required<AutoCompleteOption<T>>;\r\n    };\r\n\r\n//#endregion ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠐⠒⠒⠒⠒⠚⠛⣿⡟⠄⠄⢠⠄⠄⠄⡄⠄⠄⣠⡶⠶⣶⠶⠶⠂⣠⣶⣶⠂⠄⣸⡿⠄⠄⢀⣿⠇⠄⣰⡿⣠⡾⠋⠄⣼⡟⠄⣠⡾⠋⣾⠏⠄⢰⣿⠁⠄⠄⣾⡏⠄⠠⠿⠿⠋⠠⠶⠶⠿⠶⠾⠋⠄⠽⠟⠄⠄⠄⠃⠄⠄⣼⣿⣤⡤⠤⠤⠤⠤⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\r\n\r\n    /**\r\n     * 重载列表.\r\n     * @param items\r\n     */\r\n    public reloadItems(items?: IT[]): this {\r\n        if (items) this._option.items = items;\r\n\r\n        for (let contentItem of this._contentItems) {\r\n            contentItem.root.destroyObject();\r\n        }\r\n\r\n        this._contentItems.length = 0;\r\n        this._contentItemsIndexer.clear();\r\n        this._standForIndex = -1;\r\n        this._standForIndexInView = -1;\r\n\r\n        this.setItems();\r\n\r\n        return this;\r\n    }\r\n\r\n//#region Init\r\n    private setSize(): this {\r\n        let [x, y] = [this._option.size.x, this._option.size.y];\r\n        let [pt, pr, pb, pl] = [\r\n            this._option.padding.top ?? 0,\r\n            this._option.padding.right ?? 0,\r\n            this._option.padding.bottom ?? 0,\r\n            this._option.padding.left ?? 0,\r\n        ];\r\n\r\n        Gtk.setUiSize(this.root, x, y);\r\n\r\n        let [contentX, contentY] = [\r\n            x - pl - pr,\r\n            y - pt - pb];\r\n\r\n        Gtk.setUiSize(this._scrContainer,\r\n            contentX,\r\n            this._option.itemHeight * Math.min(this._contentItems.length, this._option.maxCount));\r\n        Gtk.setUiPosition(this._scrContainer, pl, this._input.root.size.y);\r\n        Gtk.setUiSizeX(this._cnvContainer, contentX);\r\n        Gtk.setUiPosition(this._cnvContainer, 0, 0);\r\n        Gtk.setUiPosition(this._btnClear, x - pr - 30, pt + (contentY - 20) / 2);\r\n\r\n        return this;\r\n    }\r\n\r\n    private setColor(): this {\r\n        this._scrContainer.scrollAxisColor = mw.LinearColor.colorHexToLinearColor(this._option.color.primary);\r\n\r\n        return this;\r\n    }\r\n\r\n    private setItems(): this {\r\n        const itemsByGroup = Enumerable.from(this._option.items)\r\n            .groupBy(\r\n                item => item.group,\r\n                (item) => item,\r\n                (key, element) => {\r\n                    return {\r\n                        key,\r\n                        items: element.orderBy(\r\n                            item => item.label,\r\n                            (first, second) => {\r\n                                if (first == undefined) return -1;\r\n                                if (second == undefined) return 1;\r\n                                return first?.localeCompare(second) ?? -1;\r\n                            }),\r\n                    };\r\n                },\r\n            )\r\n            .orderBy(item => item.key, (first, second) => {\r\n                if (first == undefined) return -1;\r\n                if (second == undefined) return 1;\r\n                return first?.localeCompare(second) ?? -1;\r\n            });\r\n\r\n        const width = this._option.size.x - (this._option.padding.left ?? 0) - (this._option.padding.right ?? 0);\r\n        let i = 0;\r\n        for (const item of itemsByGroup) {\r\n            let groupName = item.key;\r\n            if (!Gtk.isNullOrEmpty(groupName)) {\r\n                this._contentItems.push(AutoCompleteContentItem.create({\r\n                    label: item.key,\r\n                    size: {x: width, y: this._option.itemHeight},\r\n                    padding: {top: 0, right: 0, bottom: 0, left: 0},\r\n                    color: this._option.color,\r\n                    fontSize: this._option.fontSize,\r\n                    fontStyle: this._option.fontStyle,\r\n                    variant: \"tag\",\r\n                } as AutoCompleteContentItemOption)\r\n                    .attach(this._cnvContainer));\r\n                ++i;\r\n            }\r\n\r\n            for (const it of item.items) {\r\n                const content = AutoCompleteContentItem.create({\r\n                    label: it.label,\r\n                    size: {x: width, y: this._option.itemHeight},\r\n                    padding: {top: 0, right: 0, bottom: 0, left: 0},\r\n                    color: this._option.color,\r\n                    fontSize: this._option.fontSize,\r\n                    fontStyle: this._option.fontStyle,\r\n                    variant: \"item\",\r\n                } as AutoCompleteContentItemOption)\r\n                    .attach(this._cnvContainer);\r\n                let currentIndex = i;\r\n                content.onHover.add(() => {\r\n                    this.standForByIndex(currentIndex, content);\r\n                });\r\n                content.onClick.add(() => {\r\n                    this.hideScr();\r\n                    this.chooseByIndex(currentIndex);\r\n                });\r\n                this._contentItemsIndexer.set(it, currentIndex);\r\n\r\n                this._contentItems.push(content);\r\n                ++i;\r\n            }\r\n        }\r\n\r\n        let fuseKeys: FuseOptionKey<IT>[] = [\r\n            {name: \"label\", getFn: (item: IT) => item.label},\r\n            {name: \"group\", getFn: (item: IT) => item.group},\r\n        ];\r\n        if (this._option.additionKey) {\r\n            fuseKeys.push(...this._option.additionKey);\r\n        }\r\n        this._fuse = new Fuse(this._option.items, {\r\n            keys: fuseKeys,\r\n            includeScore: true,\r\n            threshold: 0.4,\r\n            ignoreLocation: true,\r\n            findAllMatches: true,\r\n            shouldSort: true,\r\n            sortFn: this._option.fuseSortFunction ?? undefined,\r\n        });\r\n        if (this._option.items.length > 0) {\r\n            this.standForByViewIndex(0);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n//#endregion ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠐⠒⠒⠒⠒⠚⠛⣿⡟⠄⠄⢠⠄⠄⠄⡄⠄⠄⣠⡶⠶⣶⠶⠶⠂⣠⣶⣶⠂⠄⣸⡿⠄⠄⢀⣿⠇⠄⣰⡿⣠⡾⠋⠄⣼⡟⠄⣠⡾⠋⣾⠏⠄⢰⣿⠁⠄⠄⣾⡏⠄⠠⠿⠿⠋⠠⠶⠶⠿⠶⠾⠋⠄⠽⠟⠄⠄⠄⠃⠄⠄⣼⣿⣤⡤⠤⠤⠤⠤⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\r\n\r\n    private filterItems(content: string) {\r\n        let results = Enumerable.from(this._fuse.search(content))\r\n            .select(result => this._contentItems[this._contentItemsIndexer.get(result.item)])\r\n            .toArray();\r\n\r\n        Gtk.getUiChildren(this._cnvContainer).forEach(child => child.removeObject());\r\n        this._standForIndexInView = -1;\r\n        for (let result of results) {\r\n            this._cnvContainer.addChild(result.root);\r\n        }\r\n\r\n        if (results.length > 0) {\r\n            this.standForByViewIndex(0);\r\n        }\r\n    }\r\n\r\n    private resetItem() {\r\n        Gtk.getUiChildren(this._cnvContainer).forEach(child => child.removeObject());\r\n        this._standForIndexInView = -1;\r\n        for (const content of this._contentItems) {\r\n            this._cnvContainer.addChild(content.root);\r\n        }\r\n\r\n        if (this._contentItems.length > 0) {\r\n            this.standForByViewIndex(0);\r\n        }\r\n\r\n        this._scrContainer.scrollOffset = 0;\r\n    }\r\n\r\n    private clearScrHideTimer() {\r\n        if (this._hideScrTimer) {\r\n            mw.clearTimeout(this._hideScrTimer);\r\n            this._hideScrTimer = undefined;\r\n        }\r\n    }\r\n\r\n    private refreshScrHideTimer() {\r\n        if (this._hideScrTimer) {\r\n            mw.clearTimeout(this._hideScrTimer);\r\n        }\r\n\r\n        this._hideScrTimer = mw.setTimeout(() => {\r\n                this.hideScr();\r\n            },\r\n            GtkTypes.Interval.Hz30 * 3);\r\n    }\r\n\r\n    private standForByViewIndex(index: number) {\r\n        const viewItem = this._cnvContainer.getChildAt(index);\r\n        if (this._standForIndex !== -1) {\r\n            // 存在 stand-for\r\n            if (this._standForIndexInView === -1) {\r\n                // 视图刷新而InView 失效.\r\n                if (viewItem === this._contentItems[this._standForIndex].root) {\r\n                    // 新选与原有一致.\r\n                    this._standForIndexInView = index;\r\n                    return;\r\n                }\r\n            } else if (this._standForIndexInView === index) {\r\n                // InView 有效.\r\n                // 新选与原有一致.\r\n                return;\r\n            }\r\n        }\r\n\r\n        this._standForIndexInView = index;\r\n        if (this._standForIndex !== -1) this._contentItems[this._standForIndex].unsetHighlight();\r\n        this._standForIndex = this._contentItems.findIndex(item => item.root === viewItem);\r\n        this._contentItems[this._standForIndex].setHighlight();\r\n    }\r\n\r\n    private standForByIndex(index: number, content?: AutoCompleteContentItem) {\r\n        if (this._standForIndex === index) return;\r\n        if (this._standForIndex !== -1) this._contentItems[this._standForIndex].unsetHighlight();\r\n\r\n        this._standForIndex = index;\r\n        content = content ?? this._contentItems[index];\r\n        this._standForIndexInView = Gtk.getUiChildren(this._cnvContainer).indexOf(content.root);\r\n        content.setHighlight();\r\n    }\r\n\r\n    private chooseByIndex(index: number) {\r\n        this._input.setContent(this._contentItems[index].label);\r\n        if (this._hideScrTimer) {\r\n            this.clearScrHideTimer();\r\n            this.hideScr();\r\n        }\r\n\r\n        this._currentChoose = this._option.items\r\n                .find(item => this._contentItemsIndexer.get(item) === index)\r\n            ?? undefined;\r\n\r\n        this.onChoose.invoke({item: this._currentChoose});\r\n    }\r\n\r\n    private showScr() {\r\n        this.clearScrHideTimer();\r\n        Gtk.trySetVisibility(this._scrContainer, true);\r\n    }\r\n\r\n    private hideScr() {\r\n        Gtk.trySetVisibility(this._scrContainer, false);\r\n    }\r\n\r\n    private listenToUp = () => {\r\n        let index = this._standForIndexInView - 1;\r\n        while (index >= 0) {\r\n            const ui = this._cnvContainer.getChildAt(index);\r\n            if (!this._contentItems.find(item => item.root === ui).isTag) {\r\n                break;\r\n            }\r\n            index--;\r\n        }\r\n\r\n        if (index < 0) return;\r\n        this.standForByViewIndex(index);\r\n        this.checkScrContain(index);\r\n    };\r\n\r\n    private listenToDown = () => {\r\n        let index = this._standForIndexInView + 1;\r\n        const maxCount = this._cnvContainer.getChildrenCount();\r\n        while (index < maxCount) {\r\n            const ui = this._cnvContainer.getChildAt(index);\r\n            if (!this._contentItems.find(item => item.root === ui).isTag) {\r\n                break;\r\n            }\r\n            index++;\r\n        }\r\n\r\n        if (index >= maxCount) return;\r\n\r\n        this.standForByViewIndex(index);\r\n        this.checkScrContain(index);\r\n    };\r\n\r\n    private checkScrContain(indexInView: number) {\r\n        let before = Math.ceil(this._scrContainer.scrollOffset / this._option.itemHeight);\r\n        let after = before + this._option.maxCount;\r\n\r\n        if (indexInView < before) {\r\n            this._scrContainer.scrollOffset = (indexInView - Math.min(this._option.maxCount, 1)) * this._option.itemHeight;\r\n        } else if (indexInView >= after) {\r\n            this._scrContainer.scrollOffset = (indexInView - Math.max(this._option.maxCount - 2, 0)) * this._option.itemHeight;\r\n        }\r\n    }\r\n\r\n//#region CallBack\r\n    public onClick: SimpleDelegate<ClickEvent> = new SimpleDelegate();\r\n\r\n    public onChoose: SimpleDelegate<ChooseItemEvent<IT>> = new SimpleDelegate();\r\n\r\n    public onClear: SimpleDelegate = new SimpleDelegate();\r\n\r\n//#endregion ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠐⠒⠒⠒⠒⠚⠛⣿⡟⠄⠄⢠⠄⠄⠄⡄⠄⠄⣠⡶⠶⣶⠶⠶⠂⣠⣶⣶⠂⠄⣸⡿⠄⠄⢀⣿⠇⠄⣰⡿⣠⡾⠋⠄⣼⡟⠄⣠⡾⠋⣾⠏⠄⢰⣿⠁⠄⠄⣾⡏⠄⠠⠿⠿⠋⠠⠶⠶⠿⠶⠾⠋⠄⠽⠟⠄⠄⠄⠃⠄⠄⣼⣿⣤⡤⠤⠤⠤⠤⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\r\n}\r\n\r\nexport interface AutoCompleteOption<IT extends AutoCompleteItem> extends ComponentOption {\r\n    label?: string;\r\n\r\n    items?: IT[];\r\n\r\n    color?: ThemeColor;\r\n\r\n    itemHeight?: number;\r\n\r\n    maxCount?: number;\r\n\r\n    fontSize?: number;\r\n\r\n    fontStyle?: Property.FontStyle;\r\n\r\n    renderOption?: (item: IT) => mw.Widget;\r\n\r\n    additionKey?: FuseOptionKey<IT>[];\r\n\r\n    fuseSortFunction?: (\r\n        a: FuseSortFunctionArg,\r\n        b: FuseSortFunctionArg,\r\n    ) => number;\r\n\r\n    variant?: InputFieldVariant;\r\n\r\n    corner?: Property.Corner;\r\n}\r\n\r\nclass AutoCompleteContentItem extends Component {\r\n    private _imgItemBg: mw.Image;\r\n\r\n    private _btnItem: mw.Button;\r\n\r\n    private _imgHighlight: mw.Image;\r\n\r\n    private _cnvItemLabel: mw.Canvas;\r\n\r\n    private _txtItem: mw.TextBlock;\r\n\r\n    private _option: Readonly<Required<AutoCompleteContentItemOption>> = undefined;\r\n\r\n    public get label(): string {\r\n        return this._option.label;\r\n    }\r\n\r\n    public get isTag(): boolean {\r\n        return this._option.variant === \"tag\";\r\n    }\r\n\r\n    public static create(option?: AutoCompleteContentItemOption): AutoCompleteContentItem {\r\n        let autoCompleteItem = new AutoCompleteContentItem();\r\n\r\n        autoCompleteItem._option = option as Required<AutoCompleteContentItemOption>;\r\n\r\n        if (autoCompleteItem._option.zOrder !== undefined)\r\n            autoCompleteItem.root.zOrder = autoCompleteItem._option.zOrder;\r\n\r\n        autoCompleteItem._imgItemBg = mw.Image.newObject(autoCompleteItem.root);\r\n        Gtk.trySetVisibility(autoCompleteItem._imgItemBg, true);\r\n        autoCompleteItem._imgItemBg.visibility = mw.SlateVisibility.SelfHitTestInvisible;\r\n        autoCompleteItem._imgItemBg.imageGuid = Lui.Asset.ImgRectangle;\r\n        autoCompleteItem._imgItemBg.imageDrawType = mw.SlateBrushDrawType.Image;\r\n\r\n        autoCompleteItem._btnItem = mw.Button.newObject(autoCompleteItem.root);\r\n        Gtk.trySetVisibility(autoCompleteItem._btnItem, true);\r\n        autoCompleteItem._btnItem.normalImageDrawType = mw.SlateBrushDrawType.NoDrawType;\r\n        autoCompleteItem._btnItem.clickMethod = mw.ButtonClickMethod.PreciseClick;\r\n        autoCompleteItem._btnItem.pressedMethod = mw.ButtonPressMethod.DownAndUp;\r\n        autoCompleteItem._btnItem.touchMethod = mw.ButtonTouchMethod.PreciseTap;\r\n\r\n        autoCompleteItem._imgHighlight = mw.Image.newObject(autoCompleteItem.root);\r\n        Gtk.trySetVisibility(autoCompleteItem._imgHighlight, true);\r\n        autoCompleteItem._imgHighlight.imageGuid = Lui.Asset.ImgRectangle;\r\n        autoCompleteItem._imgHighlight.imageDrawType = mw.SlateBrushDrawType.Image;\r\n        autoCompleteItem._imgHighlight.setImageColorByHex(ColorUtil.colorHexWithAlpha(Color.Black, 0.25));\r\n        autoCompleteItem._imgHighlight.renderOpacity = 0;\r\n\r\n        autoCompleteItem._cnvItemLabel = mw.Canvas.newObject(autoCompleteItem.root);\r\n        Gtk.trySetVisibility(autoCompleteItem._cnvItemLabel, true);\r\n\r\n        autoCompleteItem._txtItem = mw.TextBlock.newObject(autoCompleteItem.root);\r\n        Gtk.trySetVisibility(autoCompleteItem._txtItem, true);\r\n        autoCompleteItem._txtItem.autoAdjust = false;\r\n        autoCompleteItem._txtItem.fontSize = autoCompleteItem._option.fontSize;\r\n        autoCompleteItem._txtItem.glyph = autoCompleteItem._option.fontStyle;\r\n        autoCompleteItem._txtItem.textHorizontalLayout = mw.UITextHorizontalLayout.Clipping;\r\n        autoCompleteItem._txtItem.textAlign = mw.TextJustify.Left;\r\n        autoCompleteItem._txtItem.textVerticalAlign = mw.TextVerticalJustify.Center;\r\n        Gtk.trySetText(autoCompleteItem._txtItem, autoCompleteItem._option.label);\r\n\r\n        autoCompleteItem.setSize();\r\n        autoCompleteItem.setColor();\r\n\r\n        autoCompleteItem._btnItem.onHovered.add(() => autoCompleteItem.onHover.invoke());\r\n        autoCompleteItem._btnItem.onUnhovered.add(() => autoCompleteItem.onMouseLeft.invoke());\r\n        autoCompleteItem._btnItem.onClicked.add(() => {\r\n            const clickAt = mw.absoluteToLocal(\r\n                autoCompleteItem.root.cachedGeometry,\r\n                mw.getMousePositionOnPlatform());\r\n            autoCompleteItem.onClick.invoke({position: clickAt});\r\n        });\r\n\r\n        return autoCompleteItem;\r\n    };\r\n\r\n    protected destroy(): void {\r\n    }\r\n\r\n    private setSize(): this {\r\n        let [x, y] = [this._option.size.x, this._option.size.y];\r\n        let [pt, pr, pb, pl] = [\r\n            this._option.padding.top ?? 0,\r\n            this._option.padding.right ?? 0,\r\n            this._option.padding.bottom ?? 0,\r\n            this._option.padding.left ?? 0,\r\n        ];\r\n\r\n        Gtk.setUiSize(this.root, x, y);\r\n\r\n        let [contentX, contentY] = [\r\n            x - pl - pr,\r\n            y - pt - pb];\r\n\r\n        Gtk.setUiPosition(this._imgItemBg, pl, pt);\r\n        Gtk.setUiSize(this._imgItemBg, contentX, contentY);\r\n        Gtk.setUiPosition(this._btnItem, pl, pt);\r\n        Gtk.setUiSize(this._btnItem, contentX, contentY);\r\n        Gtk.setUiPosition(this._imgHighlight, pl, pt);\r\n        Gtk.setUiSize(this._imgHighlight, contentX, contentY);\r\n        Gtk.setUiPosition(this._cnvItemLabel, pl, pt);\r\n        Gtk.setUiSize(this._cnvItemLabel, contentX, contentY);\r\n        const labelPadding = this._option.variant === \"item\" ? 30 : 10;\r\n        Gtk.setUiPosition(this._txtItem, pl + labelPadding, pt);\r\n        Gtk.setUiSize(this._txtItem, contentX - labelPadding, contentY);\r\n\r\n        return this;\r\n    }\r\n\r\n    private setColor(): this {\r\n        if (this._option.variant === \"item\") {\r\n            this._txtItem.setFontColorByHex(ColorUtil.colorHexWithAlpha(Color.Black, 1));\r\n            this._imgItemBg.setImageColorByHex(ColorUtil.colorHexWithAlpha(Color.Gray100, 1));\r\n        } else {\r\n            this._txtItem.setFontColorByHex(ColorUtil.colorHexWithAlpha(this._option.color.primary, 1));\r\n            this._imgItemBg.setImageColorByHex(ColorUtil.colorHexWithAlpha(Color.Gray300, 1));\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    public setHighlight() {\r\n        if (this._imgHighlight.renderOpacity !== 1) {\r\n            this._imgHighlight.renderOpacity = 1;\r\n        }\r\n    }\r\n\r\n    public unsetHighlight() {\r\n        if (this._imgHighlight.renderOpacity !== 0) {\r\n            this._imgHighlight.renderOpacity = 0;\r\n        }\r\n    }\r\n\r\n//#region CallBack\r\n    public onClick: Delegate.SimpleDelegate<ClickEvent> = new Delegate.SimpleDelegate();\r\n\r\n    public onHover: Delegate.SimpleDelegate<void> = new Delegate.SimpleDelegate();\r\n\r\n    public onMouseLeft: Delegate.SimpleDelegate<void> = new Delegate.SimpleDelegate();\r\n\r\n//#endregion ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠐⠒⠒⠒⠒⠚⠛⣿⡟⠄⠄⢠⠄⠄⠄⡄⠄⠄⣠⡶⠶⣶⠶⠶⠂⣠⣶⣶⠂⠄⣸⡿⠄⠄⢀⣿⠇⠄⣰⡿⣠⡾⠋⠄⣼⡟⠄⣠⡾⠋⣾⠏⠄⢰⣿⠁⠄⠄⣾⡏⠄⠠⠿⠿⠋⠠⠶⠶⠿⠶⠾⠋⠄⠽⠟⠄⠄⠄⠃⠄⠄⣼⣿⣤⡤⠤⠤⠤⠤⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\r\n}\r\n\r\ntype AutoCompleteContentItemVariant = \"tag\" | \"item\"\r\n\r\ninterface AutoCompleteContentItemOption extends ComponentOption {\r\n    label: string;\r\n\r\n    color: ThemeColor;\r\n\r\n    fontSize: number;\r\n\r\n    fontStyle: Property.FontStyle;\r\n\r\n    variant: AutoCompleteContentItemVariant;\r\n}\r\n"],"names":[],"mappings":";;;;;;;;AASA,IAAO,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC;AAEhD,IAAO,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC;AACvC,IAAO,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;AAC/B,IAAO,gBAAgB,GAAG,GAAG,CAAC,KAAK,CAAC,gBAAgB,CAAC;AAOrD;;;;;;;;;;;AAWG;AACG,MAAO,YAA0C,SAAQ,SAAS,CAAA;AAAxE,IAAA,WAAA,GAAA;;QAWY,IAAO,CAAA,OAAA,GAAqC,SAAS,CAAC;QAEtD,IAAa,CAAA,aAAA,GAA8B,EAAE,CAAC;AAE9C,QAAA,IAAA,CAAA,oBAAoB,GAAoB,IAAI,GAAG,EAAE,CAAC;QAIlD,IAAc,CAAA,cAAA,GAAW,CAAC,CAAC,CAAC;QAE5B,IAAoB,CAAA,oBAAA,GAAW,CAAC,CAAC,CAAC;QAElC,IAAa,CAAA,aAAA,GAAW,SAAS,CAAC;QAElC,IAAa,CAAA,aAAA,GAAW,SAAS,CAAC;QAElC,IAAc,CAAA,cAAA,GAAmB,SAAS,CAAC;QA2X3C,IAAU,CAAA,UAAA,GAAG,MAAK;AACtB,YAAA,IAAI,KAAK,GAAG,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;AAC1C,YAAA,OAAO,KAAK,IAAI,CAAC,EAAE;gBACf,MAAM,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAChD,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE;oBAC1D,MAAM;iBACT;AACD,gBAAA,KAAK,EAAE,CAAC;aACX;YAED,IAAI,KAAK,GAAG,CAAC;gBAAE,OAAO;AACtB,YAAA,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;AAChC,YAAA,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AAChC,SAAC,CAAC;QAEM,IAAY,CAAA,YAAA,GAAG,MAAK;AACxB,YAAA,IAAI,KAAK,GAAG,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC;YAC1C,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,EAAE,CAAC;AACvD,YAAA,OAAO,KAAK,GAAG,QAAQ,EAAE;gBACrB,MAAM,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;gBAChD,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,KAAK,EAAE;oBAC1D,MAAM;iBACT;AACD,gBAAA,KAAK,EAAE,CAAC;aACX;YAED,IAAI,KAAK,IAAI,QAAQ;gBAAE,OAAO;AAE9B,YAAA,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;AAChC,YAAA,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AAChC,SAAC,CAAC;;AAcK,QAAA,IAAA,CAAA,OAAO,GAA+B,IAAI,cAAc,EAAE,CAAC;AAE3D,QAAA,IAAA,CAAA,QAAQ,GAAwC,IAAI,cAAc,EAAE,CAAC;AAErE,QAAA,IAAA,CAAA,OAAO,GAAmB,IAAI,cAAc,EAAE,CAAC;;KAGzD;AA5aG,IAAA,IAAW,KAAK,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;KAC7B;AAED,IAAA,IAAW,MAAM,GAAA;QACb,OAAO,IAAI,CAAC,cAAc,CAAC;KAC9B;IAED,IAAW,MAAM,CAAC,GAAO,EAAA;AACrB,QAAA,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,KAAK,GAAG,CAAC,KAAK,CAAC,EAAE;YAC3D,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACrC;KACJ;;IAGM,OAAO,MAAM,CAA8B,MAA+B,EAAA;AAC7E,QAAA,IAAI,YAAY,GAAG,IAAI,YAAY,EAAM,CAAC;QAE1C,YAAY,CAAC,OAAO,GAAG,YAAY,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;AAE1D,QAAA,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,KAAK,SAAS;YACzC,YAAY,CAAC,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC;QAE3D,YAAY,CAAC,MAAM,GAAG,SAAS;AAC1B,aAAA,MAAM,CAAC;YACJ,GAAG,YAAY,CAAC,OAAO;AACvB,YAAA,MAAM,EAAE,SAAS;SACpB,CAAC;aACD,MAAM,CAAC,YAAY,CAAC,CAAC;AAE1B,QAAA,YAAY,CAAC,SAAS,GAAG,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAC5E,YAAY,CAAC,SAAS,CAAC,eAAe,GAAG,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC5D,GAAG,CAAC,SAAS,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AAC9C,QAAA,YAAY,CAAC,SAAS,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChD,YAAY,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,EAAE,CAAC,mBAAmB,CAC3D,EAAE,CAAC,sBAAsB,CAAC,KAAK,EAC/B,EAAE,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;QACpC,YAAY,CAAC,SAAS,CAAC,UAAU,GAAG,EAAE,CAAC,eAAe,CAAC,SAAS,CAAC;AACjE,QAAA,YAAY,CAAC,SAAS,CAAC,wBAAwB,CAAC,SAAS,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;AAE/F,QAAA,YAAY,CAAC,aAAa,GAAG,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;QACvF,YAAY,CAAC,aAAa,CAAC,UAAU,GAAG,EAAE,CAAC,eAAe,CAAC,OAAO,CAAC;AACnE,QAAA,YAAY,CAAC,aAAa,CAAC,mBAAmB,GAAG,IAAI,CAAC;AACtD,QAAA,YAAY,CAAC,aAAa,CAAC,kBAAkB,GAAG,CAAC,CAAC;AAClD,QAAA,YAAY,CAAC,aAAa,CAAC,gBAAgB,GAAG,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACxE,QAAA,YAAY,CAAC,aAAa,CAAC,cAAc,GAAG,IAAI,CAAC;QACjD,YAAY,CAAC,aAAa,CAAC,aAAa,GAAG,EAAE,CAAC,wBAAwB,CAAC,gBAAgB,CAAC;QACxF,GAAG,CAAC,gBAAgB,CAAC,YAAY,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;AAExD,QAAA,YAAY,CAAC,aAAa,GAAG,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;QACpF,YAAY,CAAC,aAAa,CAAC,QAAQ,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QAChE,YAAY,CAAC,aAAa,CAAC,UAAU,GAAG,EAAE,CAAC,eAAe,CAAC,oBAAoB,CAAC;AAChF,QAAA,YAAY,CAAC,aAAa,CAAC,sBAAsB,GAAG,IAAI,CAAC;AACzD,QAAA,YAAY,CAAC,aAAa,CAAC,gBAAgB,GAAG,IAAI,CAAC;QACnD,YAAY,CAAC,aAAa,CAAC,uBAAuB,GAAG,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC;QAE9E,YAAY,CAAC,QAAQ,EAAE,CAAC;QACxB,YAAY,CAAC,OAAO,EAAE,CAAC;QACvB,YAAY,CAAC,QAAQ,EAAE,CAAC;QAExB,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,MAAK;AACtC,YAAA,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;AACnC,YAAA,YAAY,CAAC,cAAc,GAAG,SAAS,CAAC;AACxC,YAAA,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;AAClC,SAAC,CAAC,CAAC;AACH,QAAA,YAAY,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,YAAY,CAAC,SAAS,CAAC,wBAAwB,CACtF,SAAS,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,QAAA,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,YAAY,CAAC,SAAS,CAAC,wBAAwB,CACxF,SAAS,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC;QACpD,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAK;YACjC,YAAY,CAAC,OAAO,EAAE,CAAC;AAC3B,SAAC,CAAC,CAAC;QACH,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,KAAI;AACvC,YAAA,IAAI,GAAG,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,YAAY,CAAC,cAAc,KAAK,CAAC,CAAC,EAAE;AACnF,gBAAA,YAAY,CAAC,cAAc,GAAG,SAAS,CAAC;AACxC,gBAAA,YAAY,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;aACjC;iBAAM;AACH,gBAAA,YAAY,CAAC,aAAa,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC;aAC3D;YACD,YAAY,CAAC,mBAAmB,EAAE,CAAC;AACvC,SAAC,CAAC,CAAC;QACH,YAAY,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,KAAK,KAAI;AACvC,YAAA,IAAI,YAAY,CAAC,aAAa,KAAK,KAAK,CAAC,IAAI;gBAAE,OAAO;AACtD,YAAA,YAAY,CAAC,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC;AACxC,YAAA,IAAI,KAAK,CAAC,IAAI,KAAK,EAAE,EAAE;gBACnB,GAAG,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;gBACpD,YAAY,CAAC,SAAS,EAAE,CAAC;aAC5B;iBAAM;gBACH,GAAG,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AACnD,gBAAA,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aACxC;AACL,SAAC,CAAC,CAAC;QACH,YAAY,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,KAAI;AACtC,YAAA,QAAQ,KAAK,CAAC,GAAG;AACb,gBAAA,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE;oBACX,YAAY,CAAC,UAAU,EAAE,CAAC;oBAC1B,MAAM;AACV,gBAAA,KAAK,EAAE,CAAC,IAAI,CAAC,IAAI;oBACb,YAAY,CAAC,YAAY,EAAE,CAAC;oBAC5B,MAAM;aACb;AACL,SAAC,CAAC,CAAC;AAEH,QAAA,OAAO,YAAY,CAAC;KACvB;;IAEM,OAAO,aAAa,CAA6B,MAA8B,EAAA;AAClF,QAAA,IAAI,CAAC,MAAM;YAAE,MAAM,GAAG,EAAE,CAAC;QAEzB,IAAI,CAAC,MAAM,CAAC,KAAK;AAAE,YAAA,MAAM,CAAC,KAAK,GAAG,OAAO,CAAC;QAC1C,IAAI,CAAC,MAAM,CAAC,IAAI;AAAE,YAAA,MAAM,CAAC,IAAI,GAAG,EAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,EAAC,CAAC;QAChD,IAAI,CAAC,MAAM,CAAC,OAAO;AAAE,YAAA,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;QACzC,IAAI,CAAC,MAAM,CAAC,KAAK;AAAE,YAAA,MAAM,CAAC,KAAK,GAAG,gBAAgB,CAAC;QACnD,IAAI,CAAC,MAAM,CAAC,UAAU;AAAE,YAAA,MAAM,CAAC,UAAU,GAAG,EAAE,CAAC;QAC/C,IAAI,CAAC,MAAM,CAAC,QAAQ;AAAE,YAAA,MAAM,CAAC,QAAQ,GAAG,CAAC,CAAC;QAC1C,IAAI,CAAC,MAAM,CAAC,QAAQ;AAAE,YAAA,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;QAC3C,IAAI,CAAC,MAAM,CAAC,SAAS;YAAE,MAAM,CAAC,SAAS,GAAG,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC;QAC/D,IAAI,CAAC,MAAM,CAAC,OAAO;AAAE,YAAA,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC;QAC/C,IAAI,CAAC,MAAM,CAAC,MAAM;YAAE,MAAM,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC;AAE3D,QAAA,OAAO,MAAyC,CAAC;KACpD;;;AAID;;;AAGG;AACI,IAAA,WAAW,CAAC,KAAY,EAAA;AAC3B,QAAA,IAAI,KAAK;AAAE,YAAA,IAAI,CAAC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;AAEtC,QAAA,KAAK,IAAI,WAAW,IAAI,IAAI,CAAC,aAAa,EAAE;AACxC,YAAA,WAAW,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;SACpC;AAED,QAAA,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,CAAC;AAC9B,QAAA,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,CAAC;AAClC,QAAA,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;AACzB,QAAA,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC;QAE/B,IAAI,CAAC,QAAQ,EAAE,CAAC;AAEhB,QAAA,OAAO,IAAI,CAAC;KACf;;IAGO,OAAO,GAAA;QACX,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG;AACnB,YAAA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;AAC7B,YAAA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC;AAC/B,YAAA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC;AAChC,YAAA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;SACjC,CAAC;QAEF,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAE/B,QAAA,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAG;YACvB,CAAC,GAAG,EAAE,GAAG,EAAE;YACX,CAAC,GAAG,EAAE,GAAG,EAAE;SAAC,CAAC;AAEjB,QAAA,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,EAC5B,QAAQ,EACR,IAAI,CAAC,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC1F,QAAA,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnE,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;QAC7C,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5C,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,QAAQ,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;AAEzE,QAAA,OAAO,IAAI,CAAC;KACf;IAEO,QAAQ,GAAA;AACZ,QAAA,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAEtG,QAAA,OAAO,IAAI,CAAC;KACf;IAEO,QAAQ,GAAA;QACZ,MAAM,YAAY,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;aACnD,OAAO,CACJ,IAAI,IAAI,IAAI,CAAC,KAAK,EAClB,CAAC,IAAI,KAAK,IAAI,EACd,CAAC,GAAG,EAAE,OAAO,KAAI;YACb,OAAO;gBACH,GAAG;AACH,gBAAA,KAAK,EAAE,OAAO,CAAC,OAAO,CAClB,IAAI,IAAI,IAAI,CAAC,KAAK,EAClB,CAAC,KAAK,EAAE,MAAM,KAAI;oBACd,IAAI,KAAK,IAAI,SAAS;wBAAE,OAAO,CAAC,CAAC,CAAC;oBAClC,IAAI,MAAM,IAAI,SAAS;AAAE,wBAAA,OAAO,CAAC,CAAC;oBAClC,OAAO,KAAK,EAAE,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9C,iBAAC,CAAC;aACT,CAAC;AACN,SAAC,CACJ;AACA,aAAA,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,MAAM,KAAI;YACzC,IAAI,KAAK,IAAI,SAAS;gBAAE,OAAO,CAAC,CAAC,CAAC;YAClC,IAAI,MAAM,IAAI,SAAS;AAAE,gBAAA,OAAO,CAAC,CAAC;YAClC,OAAO,KAAK,EAAE,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAC9C,SAAC,CAAC,CAAC;AAEP,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC;QACzG,IAAI,CAAC,GAAG,CAAC,CAAC;AACV,QAAA,KAAK,MAAM,IAAI,IAAI,YAAY,EAAE;AAC7B,YAAA,IAAI,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC;YACzB,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,SAAS,CAAC,EAAE;gBAC/B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC;oBACnD,KAAK,EAAE,IAAI,CAAC,GAAG;AACf,oBAAA,IAAI,EAAE,EAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAC;AAC5C,oBAAA,OAAO,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAC;AAC/C,oBAAA,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;AACzB,oBAAA,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ;AAC/B,oBAAA,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;AACjC,oBAAA,OAAO,EAAE,KAAK;iBACgB,CAAC;AAC9B,qBAAA,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;AACjC,gBAAA,EAAE,CAAC,CAAC;aACP;AAED,YAAA,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,KAAK,EAAE;AACzB,gBAAA,MAAM,OAAO,GAAG,uBAAuB,CAAC,MAAM,CAAC;oBAC3C,KAAK,EAAE,EAAE,CAAC,KAAK;AACf,oBAAA,IAAI,EAAE,EAAC,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAC;AAC5C,oBAAA,OAAO,EAAE,EAAC,GAAG,EAAE,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAC;AAC/C,oBAAA,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;AACzB,oBAAA,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ;AAC/B,oBAAA,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;AACjC,oBAAA,OAAO,EAAE,MAAM;iBACe,CAAC;AAC9B,qBAAA,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;gBAChC,IAAI,YAAY,GAAG,CAAC,CAAC;AACrB,gBAAA,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,MAAK;AACrB,oBAAA,IAAI,CAAC,eAAe,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;AAChD,iBAAC,CAAC,CAAC;AACH,gBAAA,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,MAAK;oBACrB,IAAI,CAAC,OAAO,EAAE,CAAC;AACf,oBAAA,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;AACrC,iBAAC,CAAC,CAAC;gBACH,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;AAEhD,gBAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACjC,gBAAA,EAAE,CAAC,CAAC;aACP;SACJ;AAED,QAAA,IAAI,QAAQ,GAAwB;AAChC,YAAA,EAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,IAAQ,KAAK,IAAI,CAAC,KAAK,EAAC;AAChD,YAAA,EAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC,IAAQ,KAAK,IAAI,CAAC,KAAK,EAAC;SACnD,CAAC;AACF,QAAA,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;YAC1B,QAAQ,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;SAC9C;QACD,IAAI,CAAC,KAAK,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;AACtC,YAAA,IAAI,EAAE,QAAQ;AACd,YAAA,YAAY,EAAE,IAAI;AAClB,YAAA,SAAS,EAAE,GAAG;AACd,YAAA,cAAc,EAAE,IAAI;AACpB,YAAA,cAAc,EAAE,IAAI;AACpB,YAAA,UAAU,EAAE,IAAI;AAChB,YAAA,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,gBAAgB,IAAI,SAAS;AACrD,SAAA,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AAC/B,YAAA,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;SAC/B;AAED,QAAA,OAAO,IAAI,CAAC;KACf;;AAIO,IAAA,WAAW,CAAC,OAAe,EAAA;AAC/B,QAAA,IAAI,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aACpD,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAChF,aAAA,OAAO,EAAE,CAAC;AAEf,QAAA,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;AAC7E,QAAA,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC;AAC/B,QAAA,KAAK,IAAI,MAAM,IAAI,OAAO,EAAE;YACxB,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SAC5C;AAED,QAAA,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AACpB,YAAA,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;SAC/B;KACJ;IAEO,SAAS,GAAA;AACb,QAAA,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,KAAK,IAAI,KAAK,CAAC,YAAY,EAAE,CAAC,CAAC;AAC7E,QAAA,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC;AAC/B,QAAA,KAAK,MAAM,OAAO,IAAI,IAAI,CAAC,aAAa,EAAE;YACtC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SAC7C;QAED,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;AAC/B,YAAA,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;SAC/B;AAED,QAAA,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,CAAC,CAAC;KACvC;IAEO,iBAAiB,GAAA;AACrB,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE;AACpB,YAAA,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACpC,YAAA,IAAI,CAAC,aAAa,GAAG,SAAS,CAAC;SAClC;KACJ;IAEO,mBAAmB,GAAA;AACvB,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE;AACpB,YAAA,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SACvC;QAED,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,UAAU,CAAC,MAAK;YAChC,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB,EACD,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC;KACnC;AAEO,IAAA,mBAAmB,CAAC,KAAa,EAAA;QACrC,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AACtD,QAAA,IAAI,IAAI,CAAC,cAAc,KAAK,CAAC,CAAC,EAAE;;AAE5B,YAAA,IAAI,IAAI,CAAC,oBAAoB,KAAK,CAAC,CAAC,EAAE;;AAElC,gBAAA,IAAI,QAAQ,KAAK,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,EAAE;;AAE3D,oBAAA,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;oBAClC,OAAO;iBACV;aACJ;AAAM,iBAAA,IAAI,IAAI,CAAC,oBAAoB,KAAK,KAAK,EAAE;;;gBAG5C,OAAO;aACV;SACJ;AAED,QAAA,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;AAClC,QAAA,IAAI,IAAI,CAAC,cAAc,KAAK,CAAC,CAAC;YAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,cAAc,EAAE,CAAC;AACzF,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC;QACnF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,YAAY,EAAE,CAAC;KAC1D;IAEO,eAAe,CAAC,KAAa,EAAE,OAAiC,EAAA;AACpE,QAAA,IAAI,IAAI,CAAC,cAAc,KAAK,KAAK;YAAE,OAAO;AAC1C,QAAA,IAAI,IAAI,CAAC,cAAc,KAAK,CAAC,CAAC;YAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,cAAc,EAAE,CAAC;AAEzF,QAAA,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAC5B,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AAC/C,QAAA,IAAI,CAAC,oBAAoB,GAAG,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACxF,OAAO,CAAC,YAAY,EAAE,CAAC;KAC1B;AAEO,IAAA,aAAa,CAAC,KAAa,EAAA;AAC/B,QAAA,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC;AACxD,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE;YACpB,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB;AAED,QAAA,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK;AAC/B,aAAA,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC;AAC7D,eAAA,SAAS,CAAC;AAEjB,QAAA,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC,IAAI,EAAE,IAAI,CAAC,cAAc,EAAC,CAAC,CAAC;KACrD;IAEO,OAAO,GAAA;QACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;KAClD;IAEO,OAAO,GAAA;QACX,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAAC;KACnD;AAkCO,IAAA,eAAe,CAAC,WAAmB,EAAA;AACvC,QAAA,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAClF,IAAI,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;AAE3C,QAAA,IAAI,WAAW,GAAG,MAAM,EAAE;YACtB,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;SAClH;AAAM,aAAA,IAAI,WAAW,IAAI,KAAK,EAAE;AAC7B,YAAA,IAAI,CAAC,aAAa,CAAC,YAAY,GAAG,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;SACtH;KACJ;;AA9bsB,YAAA,CAAA,WAAW,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;AAuezD,MAAM,uBAAwB,SAAQ,SAAS,CAAA;AAA/C,IAAA,WAAA,GAAA;;QAWY,IAAO,CAAA,OAAA,GAAsD,SAAS,CAAC;;AA4HxE,QAAA,IAAA,CAAA,OAAO,GAAwC,IAAI,QAAQ,CAAC,cAAc,EAAE,CAAC;AAE7E,QAAA,IAAA,CAAA,OAAO,GAAkC,IAAI,QAAQ,CAAC,cAAc,EAAE,CAAC;AAEvE,QAAA,IAAA,CAAA,WAAW,GAAkC,IAAI,QAAQ,CAAC,cAAc,EAAE,CAAC;;KAGrF;AAjIG,IAAA,IAAW,KAAK,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;KAC7B;AAED,IAAA,IAAW,KAAK,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,KAAK,KAAK,CAAC;KACzC;IAEM,OAAO,MAAM,CAAC,MAAsC,EAAA;AACvD,QAAA,IAAI,gBAAgB,GAAG,IAAI,uBAAuB,EAAE,CAAC;AAErD,QAAA,gBAAgB,CAAC,OAAO,GAAG,MAAiD,CAAC;AAE7E,QAAA,IAAI,gBAAgB,CAAC,OAAO,CAAC,MAAM,KAAK,SAAS;YAC7C,gBAAgB,CAAC,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC;AAEnE,QAAA,gBAAgB,CAAC,UAAU,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACxE,GAAG,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QACxD,gBAAgB,CAAC,UAAU,CAAC,UAAU,GAAG,EAAE,CAAC,eAAe,CAAC,oBAAoB,CAAC;QACjF,gBAAgB,CAAC,UAAU,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC;QAC/D,gBAAgB,CAAC,UAAU,CAAC,aAAa,GAAG,EAAE,CAAC,kBAAkB,CAAC,KAAK,CAAC;AAExE,QAAA,gBAAgB,CAAC,QAAQ,GAAG,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACvE,GAAG,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACtD,gBAAgB,CAAC,QAAQ,CAAC,mBAAmB,GAAG,EAAE,CAAC,kBAAkB,CAAC,UAAU,CAAC;QACjF,gBAAgB,CAAC,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC,iBAAiB,CAAC,YAAY,CAAC;QAC1E,gBAAgB,CAAC,QAAQ,CAAC,aAAa,GAAG,EAAE,CAAC,iBAAiB,CAAC,SAAS,CAAC;QACzE,gBAAgB,CAAC,QAAQ,CAAC,WAAW,GAAG,EAAE,CAAC,iBAAiB,CAAC,UAAU,CAAC;AAExE,QAAA,gBAAgB,CAAC,aAAa,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC3E,GAAG,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QAC3D,gBAAgB,CAAC,aAAa,CAAC,SAAS,GAAG,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC;QAClE,gBAAgB,CAAC,aAAa,CAAC,aAAa,GAAG,EAAE,CAAC,kBAAkB,CAAC,KAAK,CAAC;AAC3E,QAAA,gBAAgB,CAAC,aAAa,CAAC,kBAAkB,CAAC,SAAS,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;AAClG,QAAA,gBAAgB,CAAC,aAAa,CAAC,aAAa,GAAG,CAAC,CAAC;AAEjD,QAAA,gBAAgB,CAAC,aAAa,GAAG,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC5E,GAAG,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;AAE3D,QAAA,gBAAgB,CAAC,QAAQ,GAAG,EAAE,CAAC,SAAS,CAAC,SAAS,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QAC1E,GAAG,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AACtD,QAAA,gBAAgB,CAAC,QAAQ,CAAC,UAAU,GAAG,KAAK,CAAC;QAC7C,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,GAAG,gBAAgB,CAAC,OAAO,CAAC,QAAQ,CAAC;QACvE,gBAAgB,CAAC,QAAQ,CAAC,KAAK,GAAG,gBAAgB,CAAC,OAAO,CAAC,SAAS,CAAC;QACrE,gBAAgB,CAAC,QAAQ,CAAC,oBAAoB,GAAG,EAAE,CAAC,sBAAsB,CAAC,QAAQ,CAAC;QACpF,gBAAgB,CAAC,QAAQ,CAAC,SAAS,GAAG,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC;QAC1D,gBAAgB,CAAC,QAAQ,CAAC,iBAAiB,GAAG,EAAE,CAAC,mBAAmB,CAAC,MAAM,CAAC;AAC5E,QAAA,GAAG,CAAC,UAAU,CAAC,gBAAgB,CAAC,QAAQ,EAAE,gBAAgB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAE1E,gBAAgB,CAAC,OAAO,EAAE,CAAC;QAC3B,gBAAgB,CAAC,QAAQ,EAAE,CAAC;AAE5B,QAAA,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,gBAAgB,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;AACjF,QAAA,gBAAgB,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,gBAAgB,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,CAAC;QACvF,gBAAgB,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,MAAK;AACzC,YAAA,MAAM,OAAO,GAAG,EAAE,CAAC,eAAe,CAC9B,gBAAgB,CAAC,IAAI,CAAC,cAAc,EACpC,EAAE,CAAC,0BAA0B,EAAE,CAAC,CAAC;YACrC,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAC,EAAC,QAAQ,EAAE,OAAO,EAAC,CAAC,CAAC;AACzD,SAAC,CAAC,CAAC;AAEH,QAAA,OAAO,gBAAgB,CAAC;KAC3B;;IAES,OAAO,GAAA;KAChB;IAEO,OAAO,GAAA;QACX,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACxD,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,GAAG;AACnB,YAAA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC;AAC7B,YAAA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC;AAC/B,YAAA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC;AAChC,YAAA,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;SACjC,CAAC;QAEF,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAE/B,QAAA,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,GAAG;YACvB,CAAC,GAAG,EAAE,GAAG,EAAE;YACX,CAAC,GAAG,EAAE,GAAG,EAAE;SAAC,CAAC;QAEjB,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC3C,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACnD,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACzC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACjD,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC9C,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACtD,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC9C,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACtD,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,KAAK,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;AAC/D,QAAA,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,GAAG,YAAY,EAAE,EAAE,CAAC,CAAC;AACxD,QAAA,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,GAAG,YAAY,EAAE,QAAQ,CAAC,CAAC;AAEhE,QAAA,OAAO,IAAI,CAAC;KACf;IAEO,QAAQ,GAAA;QACZ,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,KAAK,MAAM,EAAE;AACjC,YAAA,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,SAAS,CAAC,iBAAiB,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;AAC7E,YAAA,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,SAAS,CAAC,iBAAiB,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;SACrF;aAAM;YACH,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;AAC5F,YAAA,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,SAAS,CAAC,iBAAiB,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;SACrF;AAED,QAAA,OAAO,IAAI,CAAC;KACf;IAEM,YAAY,GAAA;QACf,IAAI,IAAI,CAAC,aAAa,CAAC,aAAa,KAAK,CAAC,EAAE;AACxC,YAAA,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,CAAC,CAAC;SACxC;KACJ;IAEM,cAAc,GAAA;QACjB,IAAI,IAAI,CAAC,aAAa,CAAC,aAAa,KAAK,CAAC,EAAE;AACxC,YAAA,IAAI,CAAC,aAAa,CAAC,aAAa,GAAG,CAAC,CAAC;SACxC;KACJ;AAUJ;;;;"}