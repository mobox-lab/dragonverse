{"version":3,"file":"Property.js","sources":["../../style/Property.ts"],"sourcesContent":["import Gtk from \"gtoolkit\";\r\n\r\nexport namespace Property {\r\n    export type Padding = { top?: number, right?: number, bottom?: number, left?: number };\r\n\r\n    export type FontSize = number | \"auto\";\r\n\r\n    export type FontStyle = mw.UIFontGlyph;\r\n\r\n    export type InputType = mw.InputTextLimit;\r\n\r\n    export type DataValidators<P> = (DataValidator<P> | DataValidatorWithReason<P>)[];\r\n\r\n    export type DataValidateResult = { result: boolean, reason?: string };\r\n\r\n    export type TextAlign = \"left\" | \"center\" | \"right\";\r\n\r\n    export type EffectLevel = \"low\" | \"medium\" | \"high\";\r\n\r\n    export enum Corner {\r\n        None = 0,\r\n        TopLeft = 1 << 0,\r\n        TopRight = 1 << 1,\r\n        BottomLeft = 1 << 2,\r\n        BottomRight = 1 << 3,\r\n        Top = TopLeft | TopRight,\r\n        Left = TopLeft | BottomLeft,\r\n        Right = TopRight | BottomRight,\r\n        Bottom = BottomLeft | BottomRight,\r\n        All = TopLeft | TopRight | BottomLeft | BottomRight,\r\n    }\r\n}\r\n\r\nexport namespace PropertyUtil {\r\n    import DataValidateResult = Property.DataValidateResult;\r\n\r\n    export function applyFontSize(\r\n        fontSizeAble: {\r\n            fontSize: number,\r\n            autoAdjust: boolean\r\n        }, fontSize: Property.FontSize) {\r\n        if (typeof fontSize === \"number\") {\r\n            fontSizeAble.fontSize = fontSize;\r\n            fontSizeAble.autoAdjust = false;\r\n        } else {\r\n            fontSizeAble.autoAdjust = true;\r\n        }\r\n    }\r\n\r\n    export function applyTextAlign(\r\n        textAlignAble: {\r\n            textAlign: mw.TextJustify\r\n        }, textAlign: Property.TextAlign) {\r\n        switch (textAlign) {\r\n            case \"left\":\r\n                textAlignAble.textAlign = mw.TextJustify.Left;\r\n                break;\r\n            case \"center\":\r\n                textAlignAble.textAlign = mw.TextJustify.Center;\r\n                break;\r\n            case \"right\":\r\n                textAlignAble.textAlign = mw.TextJustify.Right;\r\n                break;\r\n        }\r\n    }\r\n\r\n    export function getMaskPrecisionByEffectLevel(effectLevel: Property.EffectLevel): number {\r\n        switch (effectLevel) {\r\n            case \"low\":\r\n                return 4;\r\n            case \"high\":\r\n                return 10;\r\n            case \"medium\":\r\n            default:\r\n                return 6;\r\n        }\r\n    }\r\n\r\n    export function hasCorner(corner: Property.Corner, target: Property.Corner): boolean {\r\n        return (corner & target) === target;\r\n    }\r\n\r\n    export function validate<P>(validators: Property.DataValidators<P>, param: P): DataValidateResult {\r\n        if (Gtk.isNullOrEmpty(validators)) return {result: true};\r\n\r\n        for (let validator of validators) {\r\n            if (typeof validator === \"function\") {\r\n                if (!validator(param)) {\r\n                    return {\r\n                        result: false,\r\n                    };\r\n                }\r\n            } else {\r\n                if (!validator.validator(param)) {\r\n                    return {\r\n                        result: false,\r\n                        reason: validator.reason,\r\n                    };\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            result: true,\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * 󰌆数据验证器.\r\n */\r\nexport type DataValidator<P> = (param: P) => boolean\r\n\r\n/**\r\n * 归因 󰌆数据验证器.\r\n */\r\nexport interface DataValidatorWithReason<P> {\r\n    /**\r\n     * 󰌆数据验证器.\r\n     */\r\n    validator: DataValidator<P>;\r\n\r\n    /**\r\n     * 原因.\r\n     */\r\n    reason: string;\r\n}\r\n"],"names":[],"mappings":"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"}