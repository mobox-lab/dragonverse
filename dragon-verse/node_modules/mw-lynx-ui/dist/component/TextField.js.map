{"version":3,"file":"TextField.js","sources":["../../component/TextField.ts"],"sourcesContent":["import Gtk, { Delegate, Switcher } from \"gtoolkit\";\r\nimport { InputChangeEvent, InputCommitEvent } from \"../event/InputEvent\";\r\nimport { Property, PropertyUtil } from \"../style/Property\";\r\nimport { Component, ComponentOption, extractLayoutFromOption, overrideOption } from \"./Component\";\r\nimport { fromKeyString, KeyEvent } from \"../event/KeyEvent\";\r\nimport { Box } from \"./Box\";\r\nimport { Lui } from \"../style/Asset\";\r\nimport hasCorner = PropertyUtil.hasCorner;\r\nimport ColorUtil = Lui.Asset.ColorUtil;\r\nimport ThemeColor = Lui.Asset.ThemeColor;\r\nimport Color = Lui.Asset.Color;\r\nimport Interval = Lui.Asset.Interval;\r\n\r\n/**\r\n * TextField.\r\n *\r\n * ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠐⠒⠒⠒⠒⠚⠛⣿⡟\r\n * ⠄⠄⢠⠄⠄⠄⡄⠄⠄⣠⡶⠶⣶⠶⠶⠂⣠⣶⣶⠂⠄⣸⡿⠄\r\n * ⠄⢀⣿⠇⠄⣰⡿⣠⡾⠋⠄⣼⡟⠄⣠⡾⠋⣾⠏⠄⢰⣿⠁⠄\r\n * ⠄⣾⡏⠄⠠⠿⠿⠋⠠⠶⠶⠿⠶⠾⠋⠄⠽⠟⠄⠄⠄⠃⠄⠄\r\n * ⣼⣿⣤⡤⠤⠤⠤⠤⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\r\n * @author LviatYi\r\n * @font JetBrainsMono Nerd Font Mono https://github.com/ryanoasis/nerd-fonts/releases/download/v3.0.2/JetBrainsMono.zip\r\n * @fallbackFont Sarasa Mono SC https://github.com/be5invis/Sarasa-Gothic/releases/download/v0.41.6/sarasa-gothic-ttf-0.41.6.7z\r\n */\r\nexport class TextField extends Component {\r\n//#region Constant\r\n    public static readonly TextFieldHighlightLineWeight = 2;\r\n\r\n    public static readonly TextFieldFocusEventName = \"__LUI_TEXT_FIELD_FOCUS__\";\r\n\r\n    public static readonly TextFieldBlurEventName = \"__LUI_TEXT_FIELD_BLUR__\";\r\n//#endregion ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠐⠒⠒⠒⠒⠚⠛⣿⡟⠄⠄⢠⠄⠄⠄⡄⠄⠄⣠⡶⠶⣶⠶⠶⠂⣠⣶⣶⠂⠄⣸⡿⠄⠄⢀⣿⠇⠄⣰⡿⣠⡾⠋⠄⣼⡟⠄⣠⡾⠋⣾⠏⠄⢰⣿⠁⠄⠄⣾⡏⠄⠠⠿⠿⠋⠠⠶⠶⠿⠶⠾⠋⠄⠽⠟⠄⠄⠄⠃⠄⠄⣼⣿⣤⡤⠤⠤⠤⠤⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\r\n\r\n    private _option: Required<InputFieldOption> = undefined;\r\n\r\n    private _box: Box;\r\n\r\n    private _imgHighlight: mw.Image;\r\n\r\n    private _txtInput: mw.InputBox;\r\n\r\n    private _txtLabel: mw.TextBlock;\r\n\r\n    private _imgLine: mw.Image;\r\n\r\n    private _imgHighlightLine: mw.Image;\r\n\r\n    private _hovered: boolean;\r\n\r\n    private _focused: boolean;\r\n\r\n    private _labelFloatElapsed: number = 0;\r\n\r\n    private _labelStartRgb: ColorUtil.RGB;\r\n\r\n    private _labelEndRgb: ColorUtil.RGB;\r\n\r\n    private _validated: Property.DataValidateResult = {result: true};\r\n\r\n    public get text(): string {\r\n        return this._txtInput.text;\r\n    }\r\n\r\n    public get validated(): Property.DataValidateResult {\r\n        return this._validated;\r\n    }\r\n\r\n//#region Lui Component\r\n    public static create(option?: InputFieldOption): TextField {\r\n        let textField = new TextField();\r\n\r\n        textField._option = TextField.defaultOption(option);\r\n\r\n        textField._box = Box.create({\r\n            ...option,\r\n            zOrder: undefined,\r\n            color: {\r\n                primary: Color.Gray50,\r\n                secondary: Color.White,\r\n            },\r\n        })\r\n            .attach(textField);\r\n\r\n        textField._imgHighlight = Image.newObject(textField.root, \"imgHighlight\");\r\n        textField._imgHighlight.visibility = mw.SlateVisibility.SelfHitTestInvisible;\r\n        switch (textField._option.variant) {\r\n            case \"outlined\":\r\n                break;\r\n            case \"standard\":\r\n                break;\r\n            default:\r\n            case \"filled\":\r\n                textField._imgHighlight.imageGuid = Lui.Asset.ImgHalfRoundRectangle;\r\n                textField._imgHighlight.imageDrawType = SlateBrushDrawType.PixcelBox;\r\n                textField._imgHighlight.margin = new mw.Margin(\r\n                    Lui.Asset.ImgHalfRoundedRectangleBoxMargin.left,\r\n                    Lui.Asset.ImgHalfRoundedRectangleBoxMargin.top,\r\n                    Lui.Asset.ImgHalfRoundedRectangleBoxMargin.right,\r\n                    Lui.Asset.ImgHalfRoundedRectangleBoxMargin.bottom,\r\n                );\r\n                break;\r\n        }\r\n        textField._imgHighlight.setImageColorByHex(ColorUtil.colorHexWithAlpha(Color.Gray500, 0.25));\r\n        textField._imgHighlight.renderOpacity = 0;\r\n\r\n        textField._txtInput = InputBox.newObject(textField.root, \"txtInput\");\r\n        textField._txtInput.visibility = mw.SlateVisibility.Visible;\r\n        textField._txtInput.fontSize = textField._option.fontSize;\r\n        textField._txtInput.glyph = textField._option.fontStyle;\r\n        textField._txtInput.text = \"\";\r\n        textField._txtInput.hintString = \"\";\r\n        textField._txtInput.textLengthLimit = 9999;\r\n        textField._txtInput.setContentColorByHex(ColorUtil.colorHexWithAlpha(Color.White, 0));\r\n        textField._txtInput.newLineKeyBind = InsertNewLineType.AllCommit;\r\n        textField._txtInput.textAlign = TextJustify.Left;\r\n        textField._txtInput.textVerticalAlign = TextVerticalJustify.Center;\r\n        textField._txtInput.inputTextLimit = textField._option.type;\r\n\r\n        textField._txtLabel = TextBlock.newObject(textField.root, \"txtLabel\");\r\n        textField._txtLabel.visibility = mw.SlateVisibility.SelfHitTestInvisible;\r\n        textField._txtLabel.text = textField._option.label;\r\n        textField._txtLabel.textAlign = TextJustify.Left;\r\n        textField._txtLabel.textVerticalAlign = TextVerticalJustify.Center;\r\n        textField._txtLabel.fontSize = textField._option.fontSize;\r\n        textField._txtLabel.renderTransformPivot = new Vector2(0, 0);\r\n        textField._txtLabel.glyph = textField._option.fontStyle;\r\n        textField._txtLabel.textHorizontalLayout = UITextHorizontalLayout.Clipping;\r\n\r\n        textField._imgLine = Image.newObject(textField.root, \"imgLine\");\r\n        textField._imgLine.visibility = mw.SlateVisibility.SelfHitTestInvisible;\r\n        textField._imgLine.imageGuid = Lui.Asset.ImgRectangle;\r\n        textField._imgLine.imageDrawType = SlateBrushDrawType.Image;\r\n        textField._imgLine.setImageColorByHex(ColorUtil.colorHexWithAlpha(Color.Black, 1));\r\n\r\n        textField._imgHighlightLine = Image.newObject(textField.root, \"imgHighlightLine\");\r\n        textField._imgHighlightLine.visibility = mw.SlateVisibility.SelfHitTestInvisible;\r\n        textField._imgHighlightLine.imageGuid = Lui.Asset.ImgRectangle;\r\n        textField._imgHighlightLine.imageDrawType = SlateBrushDrawType.Image;\r\n        Gtk.setUiScale(textField._imgHighlightLine, 0, 1);\r\n\r\n        textField.setLayout(textField._option);\r\n        textField.setColor();\r\n\r\n        textField._txtInput.onTextCommitted.add((text, commitMethod) => {\r\n            textField._focused = false;\r\n            textField.validate();\r\n            textField.onCommit.invoke({text, commitMethod, validate: textField.validated});\r\n        });\r\n        textField._txtInput.onTextChanged.add(text => {\r\n            textField.onChange.invoke({text});\r\n        });\r\n\r\n        mw.TimeUtil.onEnterFrame.add(textField.renderAnimHandler);\r\n\r\n        ((textField._txtInput as mw.Widget)[\"onFocusChange\"] as mw.Delegate<(absolutionPosition: mw.Vector2) => boolean>)\r\n            .bind((pos) => {\r\n                if (!textField._focused) {\r\n                    mw.Event.dispatchToLocal(TextField.TextFieldFocusEventName);\r\n\r\n                    textField._focused = true;\r\n                    textField.onFocus.invoke();\r\n                } else {\r\n                    mw.Event.dispatchToLocal(TextField.TextFieldBlurEventName);\r\n                    textField._focused = false;\r\n                }\r\n                return true;\r\n            });\r\n\r\n        ((textField._txtInput as mw.Widget)[\"onKeyUpEvent\"] as mw.Delegate<(absolutionPosition: mw.Vector2, keyEvent: mw.KeyEvent) => boolean>)\r\n            .bind((pos, keyEvent) => {\r\n                textField.onKeyUp.invoke({\r\n                    key: fromKeyString(keyEvent.getKey()),\r\n                    type: \"up\",\r\n                } as KeyEvent);\r\n                return false;\r\n            });\r\n\r\n        return textField;\r\n    }\r\n\r\n    public static defaultOption(option?: InputFieldOption): Required<InputFieldOption> {\r\n        if (!option) option = {};\r\n\r\n        if (!option.size) option.size = {x: 240, y: 60};\r\n        if (!option.padding) option.padding = {top: 0, right: 0, bottom: 0, left: 0};\r\n        if (!option.label) option.label = \"input\";\r\n        if (!option.color) option.color = {\r\n            primary: Color.Blue,\r\n            secondary: Color.Blue200,\r\n        };\r\n        if (!option.fontSize) option.fontSize = 18;\r\n        if (!option.fontStyle) option.fontStyle = mw.UIFontGlyph.Light;\r\n        if (!option.type) option.type = mw.InputTextLimit.NoLimit;\r\n        if (!option.variant) option.variant = \"filled\";\r\n        if (!option.corner) option.corner = Property.Corner.Bottom;\r\n\r\n        return option as Required<InputFieldOption>;\r\n    }\r\n\r\n    protected renderAnimHandler = (dt: number) => {\r\n        this._hovered = !this._focused && this._txtInput.isHovered;\r\n        if (this._focused && this._imgHighlightLine.renderScale.x < 1) {\r\n            let elapsed = Math.min(\r\n                1,\r\n                this._imgHighlightLine.renderScale.x + dt / Interval.VeryFast);\r\n            Gtk.setUiScaleX(\r\n                this._imgHighlightLine,\r\n                elapsed,\r\n            );\r\n        }\r\n        if (!this._focused && this._imgHighlightLine.renderScale.x > 0) {\r\n            let elapsed = Math.max(\r\n                0,\r\n                this._imgHighlightLine.renderScale.x - dt / Interval.VeryFast);\r\n            Gtk.setUiScaleX(\r\n                this._imgHighlightLine,\r\n                elapsed,\r\n            );\r\n        }\r\n        if ((this._focused || !Gtk.isNullOrEmpty(this._txtInput.text)) && this._labelFloatElapsed < 1) {\r\n            this._txtLabel.glyph = mw.UIFontGlyph.Normal;\r\n            this._labelFloatElapsed = Math.min(\r\n                1,\r\n                this._labelFloatElapsed + dt / Interval.VeryFast);\r\n\r\n            let rgb = ColorUtil.lerp(\r\n                this._labelStartRgb.r,\r\n                this._labelStartRgb.g,\r\n                this._labelStartRgb.b,\r\n                this._labelEndRgb.r,\r\n                this._labelEndRgb.g,\r\n                this._labelEndRgb.b,\r\n                this._labelFloatElapsed,\r\n            );\r\n            let color = this._txtLabel.fontColor;\r\n            color.r = rgb.r;\r\n            color.g = rgb.g;\r\n            color.b = rgb.b;\r\n\r\n            this._txtLabel.fontColor = new mw.LinearColor(rgb.r, rgb.g, rgb.b, 1);\r\n            const scale = 1 - 0.4 * this._labelFloatElapsed;\r\n            const posY = 10 - 10 * this._labelFloatElapsed;\r\n            Gtk.setUiScale(this._txtLabel, scale, scale);\r\n            Gtk.setUiPositionY(this._txtLabel, posY);\r\n        }\r\n        if ((!this._focused && Gtk.isNullOrEmpty(this._txtInput.text)) && this._labelFloatElapsed > 0) {\r\n            this._txtLabel.glyph = this._option.fontStyle;\r\n            this._labelFloatElapsed = Math.max(\r\n                0,\r\n                this._labelFloatElapsed - dt / Interval.VeryFast);\r\n\r\n            let rgb = ColorUtil.lerp(\r\n                this._labelStartRgb.r,\r\n                this._labelStartRgb.g,\r\n                this._labelStartRgb.b,\r\n                this._labelEndRgb.r,\r\n                this._labelEndRgb.g,\r\n                this._labelEndRgb.b,\r\n                this._labelFloatElapsed,\r\n            );\r\n            let color = this._txtLabel.fontColor;\r\n            color.r = rgb.r;\r\n            color.g = rgb.g;\r\n            color.b = rgb.b;\r\n\r\n            this._txtLabel.fontColor = new mw.LinearColor(rgb.r, rgb.g, rgb.b, 1);\r\n            const scale = 1 - 0.4 * this._labelFloatElapsed;\r\n            const posY = 10 - 10 * this._labelFloatElapsed;\r\n            Gtk.setUiScale(this._txtLabel, scale, scale);\r\n            Gtk.setUiPositionY(this._txtLabel, posY);\r\n        }\r\n\r\n        if (this._hovered && this._imgHighlight.renderOpacity < 1) {\r\n            this._imgHighlight.renderOpacity = Math.min(\r\n                1,\r\n                this._imgHighlight.renderOpacity + dt / Interval.VeryFast);\r\n        }\r\n        if (!this._hovered && this._imgHighlight.renderOpacity > 0) {\r\n            this._imgHighlight.renderOpacity = Math.max(\r\n                0,\r\n                this._imgHighlight.renderOpacity - dt / Interval.VeryFast);\r\n        }\r\n    };\r\n\r\n    public setLayout(option: ComponentOption): this {\r\n        overrideOption(this._option, option);\r\n        super.setLayout(this._option);\r\n        let [\r\n            [x, y],\r\n            [pt, pr, pb, pl],\r\n            [contentX, contentY],\r\n        ] =\r\n            extractLayoutFromOption(this._option);\r\n\r\n        Gtk.setUiPosition(this._imgHighlight, pl, pt);\r\n        Gtk.setUiSize(this._imgHighlight, contentX, contentY);\r\n        Gtk.setUiPosition(this._txtInput, pl + 10, pt + 10);\r\n        Gtk.setUiSize(this._txtInput, contentX - 20, contentY - 10);\r\n        Gtk.setUiPosition(this._txtLabel, pl + 15, pt + 10);\r\n        Gtk.setUiSize(this._txtLabel, contentX - 30, contentY - 10);\r\n        const weight = TextField.TextFieldHighlightLineWeight;\r\n        new Switcher()\r\n            .case(() => {\r\n                    Gtk.setUiPosition(this._imgLine, pl, pt + contentY - weight);\r\n                    Gtk.setUiSize(this._imgLine, contentX, weight);\r\n                    Gtk.setUiPosition(this._imgHighlightLine, pl, pt + contentY - weight);\r\n                    Gtk.setUiSize(this._imgHighlightLine, contentX, weight);\r\n                },\r\n                true,\r\n                true)\r\n            .case(() => {\r\n                    Gtk.setUiPosition(this._imgLine, pl, pt);\r\n                    Gtk.setUiSize(this._imgLine, contentX, weight);\r\n                    Gtk.setUiPosition(this._imgHighlightLine, pl, pt);\r\n                    Gtk.setUiSize(this._imgHighlightLine, contentX, weight);\r\n                },\r\n                undefined,\r\n                undefined,\r\n                true,\r\n                true)\r\n            .case(() => {\r\n                    Gtk.setUiPosition(this._imgLine, pl, pt);\r\n                    Gtk.setUiSize(this._imgLine, weight, contentY);\r\n                    Gtk.setUiPosition(this._imgHighlightLine, pl, pt);\r\n                    Gtk.setUiSize(this._imgHighlightLine, weight, contentY);\r\n                },\r\n                true,\r\n                undefined,\r\n                true,\r\n                undefined)\r\n            .case(() => {\r\n                    Gtk.setUiPosition(this._imgLine, pl + contentY - weight, pt);\r\n                    Gtk.setUiSize(this._imgLine, weight, contentY);\r\n                    Gtk.setUiPosition(this._imgHighlightLine, pl + contentY - weight, pt);\r\n                    Gtk.setUiSize(this._imgHighlightLine, weight, contentY);\r\n                },\r\n                undefined,\r\n                true,\r\n                undefined,\r\n                true)\r\n            .default(() => {\r\n                Gtk.setUiPosition(this._imgLine,\r\n                    pl\r\n                    + (hasCorner(this._option.corner, Property.Corner.BottomLeft) ? 0 :\r\n                        Lui.Asset.ImgRoundedRectangleBoxMargin.left),\r\n                    pt + contentY - weight);\r\n                Gtk.setUiSize(this._imgLine,\r\n                    contentX\r\n                    - (hasCorner(this._option.corner, Property.Corner.BottomLeft) ? 0 :\r\n                        Lui.Asset.ImgRoundedRectangleBoxMargin.left)\r\n                    - (hasCorner(this._option.corner, Property.Corner.BottomRight) ? 0 :\r\n                        Lui.Asset.ImgRoundedRectangleBoxMargin.right),\r\n                    weight);\r\n                Gtk.setUiPosition(this._imgHighlightLine,\r\n                    pl\r\n                    + (hasCorner(this._option.corner, Property.Corner.BottomLeft) ? 0 :\r\n                        Lui.Asset.ImgRoundedRectangleBoxMargin.left),\r\n                    pt + contentY - weight);\r\n                Gtk.setUiSize(this._imgHighlightLine,\r\n                    contentX\r\n                    - (hasCorner(this._option.corner, Property.Corner.BottomLeft) ? 0 :\r\n                        Lui.Asset.ImgRoundedRectangleBoxMargin.left)\r\n                    - (hasCorner(this._option.corner, Property.Corner.BottomRight) ? 0 :\r\n                        Lui.Asset.ImgRoundedRectangleBoxMargin.right),\r\n                    weight);\r\n            })\r\n            .judge(\r\n                hasCorner(this._option.corner, Property.Corner.BottomLeft),\r\n                hasCorner(this._option.corner, Property.Corner.BottomRight),\r\n                hasCorner(this._option.corner, Property.Corner.TopLeft),\r\n                hasCorner(this._option.corner, Property.Corner.TopRight),\r\n            );\r\n\r\n        return this;\r\n    }\r\n\r\n//#endregion ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠐⠒⠒⠒⠒⠚⠛⣿⡟⠄⠄⢠⠄⠄⠄⡄⠄⠄⣠⡶⠶⣶⠶⠶⠂⣠⣶⣶⠂⠄⣸⡿⠄⠄⢀⣿⠇⠄⣰⡿⣠⡾⠋⠄⣼⡟⠄⣠⡾⠋⣾⠏⠄⢰⣿⠁⠄⠄⣾⡏⠄⠠⠿⠿⠋⠠⠶⠶⠿⠶⠾⠋⠄⠽⠟⠄⠄⠄⠃⠄⠄⣼⣿⣤⡤⠤⠤⠤⠤⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\r\n\r\n//#region Init\r\n    private setColor() {\r\n        this._txtLabel.setFontColorByHex(ColorUtil.colorHexWithAlpha(Color.Black, 1));\r\n        this._labelStartRgb = ColorUtil.hexToRgb(Color.Black);\r\n        this._labelStartRgb.r /= 255;\r\n        this._labelStartRgb.g /= 255;\r\n        this._labelStartRgb.b /= 255;\r\n        this._labelEndRgb = ColorUtil.hexToRgb(this._option.color.primary);\r\n        this._labelEndRgb.r /= 255;\r\n        this._labelEndRgb.g /= 255;\r\n        this._labelEndRgb.b /= 255;\r\n        this._imgHighlightLine.setImageColorByHex(ColorUtil.colorHexWithAlpha(this._option.color.primary, 1));\r\n    }\r\n\r\n//#endregion ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠐⠒⠒⠒⠒⠚⠛⣿⡟⠄⠄⢠⠄⠄⠄⡄⠄⠄⣠⡶⠶⣶⠶⠶⠂⣠⣶⣶⠂⠄⣸⡿⠄⠄⢀⣿⠇⠄⣰⡿⣠⡾⠋⠄⣼⡟⠄⣠⡾⠋⣾⠏⠄⢰⣿⠁⠄⠄⣾⡏⠄⠠⠿⠿⠋⠠⠶⠶⠿⠶⠾⠋⠄⠽⠟⠄⠄⠄⠃⠄⠄⣼⣿⣤⡤⠤⠤⠤⠤⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\r\n\r\n    public setContent(text: string) {\r\n        Gtk.trySetText(this._txtInput, text);\r\n        this.validate();\r\n    }\r\n\r\n    public setValidator(validator: Property.DataValidators<string>): void {\r\n        if (Gtk.isNullOrEmpty(validator)) {\r\n            this._option.validator = undefined;\r\n        } else {\r\n            this._option.validator = validator;\r\n        }\r\n    }\r\n\r\n//#region Event\r\n    public onCommit: Delegate.SimpleDelegate<InputCommitEvent> = new Delegate.SimpleDelegate();\r\n\r\n    public onChange: Delegate.SimpleDelegate<InputChangeEvent> = new Delegate.SimpleDelegate();\r\n\r\n    public onFocus: Delegate.SimpleDelegate = new Delegate.SimpleDelegate();\r\n\r\n    public onKeyUp: Delegate.SimpleDelegate<KeyEvent> = new Delegate.SimpleDelegate();\r\n\r\n//#endregion ⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠐⠒⠒⠒⠒⠚⠛⣿⡟⠄⠄⢠⠄⠄⠄⡄⠄⠄⣠⡶⠶⣶⠶⠶⠂⣠⣶⣶⠂⠄⣸⡿⠄⠄⢀⣿⠇⠄⣰⡿⣠⡾⠋⠄⣼⡟⠄⣠⡾⠋⣾⠏⠄⢰⣿⠁⠄⠄⣾⡏⠄⠠⠿⠿⠋⠠⠶⠶⠿⠶⠾⠋⠄⠽⠟⠄⠄⠄⠃⠄⠄⣼⣿⣤⡤⠤⠤⠤⠤⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄⠄\r\n\r\n    private validate() {\r\n        if (!Gtk.isNullOrEmpty(this.text)) {\r\n            this._validated = PropertyUtil.validate(this._option.validator, this.text);\r\n        } else {\r\n            this._validated = {result: true};\r\n        }\r\n\r\n        if (!this._validated.result) {\r\n            this._txtLabel.text = this._validated.reason ?? \"Error\";\r\n            this._txtLabel.setFontColorByHex(Color.Red);\r\n        } else if (this._txtLabel.text !== this._option.label) {\r\n            this._txtLabel.text = this._option.label;\r\n            let color = this._txtLabel.fontColor;\r\n            color.r = this._labelEndRgb.r;\r\n            color.g = this._labelEndRgb.g;\r\n            color.b = this._labelEndRgb.b;\r\n            this._txtLabel.fontColor = color;\r\n        }\r\n    }\r\n}\r\n\r\nexport type InputFieldVariant = \"outlined\" | \"filled\" | \"standard\";\r\n\r\nexport interface InputFieldOption extends ComponentOption {\r\n    label?: string;\r\n\r\n    color?: ThemeColor;\r\n\r\n    fontSize?: number;\r\n\r\n    fontStyle?: Property.FontStyle;\r\n\r\n    type?: Property.InputType;\r\n\r\n    validator?: Property.DataValidators<string>;\r\n\r\n    variant?: InputFieldVariant;\r\n\r\n    corner?: Property.Corner;\r\n}"],"names":[],"mappings":"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"}